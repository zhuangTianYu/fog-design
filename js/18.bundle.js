"use strict";(self.webpackChunkfog_design=self.webpackChunkfog_design||[]).push([[18],{7368:n=>{n.exports=JSON.parse('{"button":{"demoContent":"import React, { useState, useEffect } from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\nimport Message from \'@components/message\';\\nimport \'./index.less\';\\n\\nconst ButtonDemo = () => {\\n  const [loading, setLoading] = useState<boolean>(false);\\n\\n  useEffect(() => {\\n    import(\'@static/docs-config.json\')\\n      .then(config => {\\n        console.log(config.button.demoContent);\\n      })\\n      .catch(error => {\\n        Message.error({ content: error.message });\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\"button-demo\\">\\n      <h2>Button</h2>\\n      <h3>Type</h3>\\n      <Button type=\\"primary\\">\\n        Primary\\n      </Button>\\n      <Button>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\">\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        Text\\n      </Button>\\n      <h3>Icon</h3>\\n      <Button type=\\"primary\\">\\n        <Icon type=\\"calendar\\" />\\n        Date\\n      </Button>\\n      <Button>\\n        <Icon type=\\"email\\" />\\n        Send\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Trigger\\n        <Icon type=\\"down\\" />\\n      </Button>\\n      <Button type=\\"link\\">\\n        <Icon type=\\"link\\" />\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        <Icon type=\\"edit\\" />\\n        Edit\\n      </Button>\\n      <h3>Loading</h3>\\n      <Button type=\\"primary\\" loading>\\n        Loading\\n      </Button>\\n      <Button\\n        loading={loading}\\n        onClick={() => {\\n          setLoading(true);\\n\\n          setTimeout(() => setLoading(false), 1000);\\n        }\\n      }>\\n        <Icon type=\\"email\\" />\\n        Click me\\n      </Button>\\n      <h3>Disabled</h3>\\n      <Button type=\\"primary\\" disabled>\\n        Primary\\n      </Button>\\n      <Button disabled>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" disabled>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" disabled>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" disabled>\\n        Text\\n      </Button>\\n      <h3>Danger</h3>\\n      <Button type=\\"primary\\" danger>\\n        Primary\\n      </Button>\\n      <Button danger>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" danger>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" danger>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" danger>\\n        Text\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nexport default ButtonDemo;\\n"},"checkbox":{"demoContent":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst { Group } = Checkbox;\\n\\nconst checkboxes = [\'Cola\', \'Pepsi\', \'Fanta\', \'Sprite\'];\\n\\nconst CheckboxDemo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n  const [groupDisabled, setGroupDisabled] = useState<boolean>(false);\\n  const [value, setValue] = useState(checkboxes.filter(item => item !== \'Pepsi\'));\\n\\n  return (\\n    <div className=\\"checkbox-demo\\">\\n      <h2>Checkbox</h2>\\n      <h3>Basic Usage</h3>\\n      <Checkbox defaultChecked>Cola</Checkbox>\\n      <h3>Disabled</h3>\\n      <Checkbox defaultChecked disabled={disabled}>Cola</Checkbox>\\n      <Checkbox disabled={disabled}>Fanta</Checkbox>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n      <h3>Group</h3>\\n      <Group defaultValue={[\'Cola\']} disabled={groupDisabled}>\\n        <Checkbox value=\\"Cola\\" key=\\"Cola\\">Cola</Checkbox>\\n        <Checkbox value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Checkbox>\\n        <Checkbox value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Checkbox>\\n        <Checkbox value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Checkbox>\\n      </Group>\\n      <Switch checked={groupDisabled} onChange={setGroupDisabled} />\\n      <h3>Indeterminate</h3>\\n      <Checkbox\\n        style={{ display: \'block\', marginBottom: 20 }}\\n        indeterminate={value.length && value.length < checkboxes.length}\\n        checked={value.length === checkboxes.length}\\n        onChange={event => setValue(event.target.checked ? checkboxes : [])}\\n      >\\n        Check all\\n      </Checkbox>\\n      <Group value={value} onChange={setValue}>\\n        {checkboxes.map(item => (\\n          <Checkbox value={item} key={item}>{item}</Checkbox>\\n        ))}\\n      </Group>\\n    </div>\\n  );\\n};\\n\\nexport default CheckboxDemo;\\n"},"date-picker":{"demoContent":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\nimport \'./index.less\';\\n\\nconst DatePickerDemo = () => {\\n\\n  return (\\n    <div className=\\"date-picker-demo\\">\\n      <h2>DatePicker</h2>\\n      <h3>Basic Usage</h3>\\n      <DatePicker placeholder=\\"Please select\\" />\\n      <h3>Disabled</h3>\\n      <DatePicker\\n        placeholder=\\"Please select\\"\\n        disabled\\n      />\\n      <h3>Disabled Date</h3>\\n      <DatePicker\\n        placeholder=\\"Please select\\"\\n        disabledDate={value => (\\n          new Date(value).getDate() >= 20 ||\\n          new Date(value).getDate() === 12\\n        )}\\n      />\\n      <h3>Mode</h3>\\n      <p>\\n        <code>mode=\\"month\\"</code>\\n      </p>\\n      <DatePicker\\n        placeholder=\\"Please select\\"\\n        mode=\\"month\\"\\n      />\\n      <p>\\n        <code>mode=\\"year\\"</code>\\n      </p>\\n      <DatePicker\\n        placeholder=\\"Please select\\"\\n        mode=\\"year\\"\\n      />\\n    </div>\\n  );\\n};\\n\\nexport default DatePickerDemo;\\n"},"drawer":{"demoContent":"import React, { useState } from \'react\';\\nimport Drawer from \'@components/drawer\';\\nimport Button from \'@components/button\';\\nimport Radio from \'@components/radio\';\\nimport { kebabCaseToPascalCase } from \'@utils/index\';\\nimport \'./index.less\';\\n\\nconst placements = [\'top\', \'right\', \'bottom\', \'left\'];\\n\\nconst DrawerContent = () => {\\n  const [count, setCount] = useState<number>(0);\\n\\n  return (\\n    <div className=\\"drawer-content\\">\\n      <p>Clicked {count} times, state preserved.</p>\\n      <Button onClick={() => setCount(count + 1)}>\\n        Click me\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nconst DrawerDemo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n  const [visibleForPlacement, setVisibleForPlacement] = useState<boolean>(false);\\n  const [placement, setPlacement] = useState<string>(placements[1]);\\n\\n  return (\\n    <div className=\\"drawer-demo\\">\\n      <h2>Drawer</h2>\\n      <h3>Basic Usage</h3>\\n      <Button onClick={() => setVisible(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visible}\\n        onClose={() => setVisible(false)}\\n      >\\n        Drawer Content\\n      </Drawer>\\n      <h3>Placement</h3>\\n      <Radio.Group\\n        value={placement}\\n        onChange={event => setPlacement(event.target.value)}\\n      >\\n        {placements.map(item => (\\n          <Radio value={item} key={item}>\\n            {kebabCaseToPascalCase(item)}\\n          </Radio>\\n        ))}\\n      </Radio.Group>\\n      <Button onClick={() => setVisibleForPlacement(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visibleForPlacement}\\n        placement={placement}\\n        onClose={() => setVisibleForPlacement(false)}\\n      >\\n        <DrawerContent />\\n      </Drawer>\\n    </div>\\n  );\\n};\\n\\nexport default DrawerDemo;\\n"},"icon":{"demoContent":"import React from \'react\';\\nimport Icon from \'@components/icon\';\\nimport { TYPE_PATH_MAP } from \'@components/icon/constants\';\\nimport \'./index.less\';\\n\\nconst IconDemo = () => {\\n\\n  return (\\n    <div className=\\"icon-demo\\">\\n      <h2>Icon</h2>\\n      <h3>Basic Usage</h3>\\n      {Object.keys(TYPE_PATH_MAP).map((type: keyof typeof TYPE_PATH_MAP) => (\\n        <div className=\\"icon-demo__item\\" key={type}>\\n          <Icon\\n            className=\\"icon-demo__icon\\"\\n            type={type}\\n            size={24}\\n          />\\n          <div className=\\"icon-demo__type\\">\\n            {type}\\n          </div>\\n        </div>\\n      ))}\\n    </div>\\n  );\\n};\\n\\nexport default IconDemo;\\n"},"input":{"demoContent":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\nimport \'./index.less\';\\n\\nconst { TextArea } = Input;\\n\\nconst InputDemo = () => {\\n\\n  return (\\n    <div className=\\"input-demo\\">\\n      <h2>Input</h2>\\n      <h3>Basic Usage</h3>\\n      <Input placeholder=\\"Please input\\" />\\n      <h3>Clearable</h3>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        defaultValue=\\"Your emotion\\"\\n        clearable\\n      />\\n      <h3>Prefix</h3>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix={<Icon type=\\"email\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix=\\"https://\\"\\n      />\\n      <h3>Suffix</h3>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix={<Icon type=\\"edit\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix=\\"@163.com\\"\\n      />\\n      <h3>Disabled</h3>\\n      <Input placeholder=\\"Please input\\" disabled />\\n      <h3>ReadOnly</h3>\\n      <Input placeholder=\\"Please Input\\" readOnly />\\n      <h3>Password</h3>\\n      <Input placeholder=\\"Please Input\\" type=\\"password\\" defaultValue=\\"12345678\\" />\\n      <h3>TextArea</h3>\\n      <TextArea placeholder=\\"Please Input\\" />\\n    </div>\\n  );\\n};\\n\\nexport default InputDemo;\\n"},"loading":{"demoContent":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\nimport Icon from \'@components/icon\';\\nimport \'./index.less\';\\n\\nconst LoadingDemo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n  const [tipLoading, setTipLoading] = useState<boolean>(true);\\n  const [iconLoading, setIconLoading] = useState<boolean>(true);\\n\\n  return (\\n    <div className=\\"loading-demo\\">\\n      <h2>Loading</h2>\\n      <h3>Basic Usage</h3>\\n      <Loading />\\n      <h3>Container Usage</h3>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n      <h3>Tip</h3>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={tipLoading}\\n        tip=\\"Loading...\\"\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={tipLoading} onChange={setTipLoading} />\\n      <h3>Customized Icon</h3>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={iconLoading}\\n        icon={<Icon type=\\"loading-3/4\\" />}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={iconLoading} onChange={setIconLoading} />\\n    </div>\\n  );\\n};\\n\\nexport default LoadingDemo;\\n"},"menu":{"demoContent":"import React from \'react\';\\nimport Menu from \'@components/menu\';\\nimport \'./index.less\';\\n\\nconst { SubMenu, ItemGroup, Item } = Menu;\\n\\nconst MenuDemo = () => {\\n\\n  return (\\n    <div className=\\"menu-demo\\">\\n      <h2>Menu</h2>\\n      <h3>Basic Usage</h3>\\n      <Menu\\n        style={{\\n          width: 240,\\n          borderRight: \'1px solid var(--fog-border-color)\',\\n        }}\\n        defaultOpens={[\'Navigation 1\', \'Navigation 2\', \'SubMenu\']}\\n        defaultValue=\\"Option 1\\"\\n      >\\n        <SubMenu label=\\"Navigation 1\\" key=\\"Navigation 1\\">\\n          <ItemGroup label=\\"Group-1\\" key=\\"Group-1\\">\\n            <Item label=\\"Option 1\\" key=\\"Option 1\\" />\\n            <Item label=\\"Option 2\\" key=\\"Option 2\\" />\\n          </ItemGroup>\\n          <ItemGroup label=\\"Group-2\\" key=\\"Group-2\\">\\n            <Item label=\\"Option 3\\" key=\\"Option 3\\" />\\n            <Item label=\\"Option 4\\" key=\\"Option 4\\" />\\n          </ItemGroup>\\n        </SubMenu>\\n        <SubMenu label=\\"Navigation 2\\" key=\\"Navigation 2\\">\\n          <Item label=\\"Option 5\\" key=\\"Option 5\\" />\\n          <Item label=\\"Option 6\\" key=\\"Option 6\\" />\\n          <SubMenu label=\\"SubMenu\\" key=\\"SubMenu\\">\\n            <Item label=\\"Option 7\\" key=\\"Option 7\\" />\\n            <Item label=\\"Option 8\\" key=\\"Option 8\\" />\\n          </SubMenu>\\n        </SubMenu>\\n        <Item label=\\"Option 9\\" key=\\"Option 9\\" />\\n        <Item label=\\"Option 10\\" key=\\"Option 10\\" />\\n      </Menu>\\n    </div>\\n  );\\n};\\n\\nexport default MenuDemo;\\n"},"message":{"demoContent":"import React, { useEffect, useRef } from \'react\';\\nimport Message, { MessageReference } from \'@components/message\';\\nimport Button from \'@components/button\';\\nimport \'./index.less\';\\n\\nconst MessageDemo = () => {\\n  const manualRef = useRef<MessageReference>(null);\\n\\n  useEffect(() => {\\n    return () => {\\n      Message.destroyAll();\\n      manualRef.current = null;\\n    };\\n  }, []);\\n\\n  return (\\n    <div className=\\"message-demo\\">\\n      <h2>Message</h2>\\n      <h3>Basic Usage</h3>\\n      <Button onClick={() => Message.info({ content: \'Basic usage\' })}>\\n        Click me\\n      </Button>\\n      <h3>Method</h3>\\n      <Button onClick={() => Message.info({ content: \'Subscribe the news\' })}>\\n        Info\\n      </Button>\\n      <Button onClick={() => Message.error({ content: \'Login required\' })}>\\n        Error\\n      </Button>\\n      <Button onClick={() => Message.warning({ content: \'Remember password\' })}>\\n        Warning\\n      </Button>\\n      <Button onClick={() => Message.success({ content: \'Login success\' })}>\\n        Success\\n      </Button>\\n      <h3>Customized Icon</h3>\\n      <Button\\n        onClick={() => Message.info({\\n          icon: \'🍷\',\\n          content: \'Hot drinks and cold days\',\\n        })}\\n      >\\n        Emoji\\n      </Button>\\n      <Button\\n        onClick={() => Message.info({\\n          icon: null,\\n          content: \'No icon makes me look so cool\',\\n        })}\\n      >\\n        Without icon\\n      </Button>\\n      <h3>Manual Close</h3>\\n      <Button\\n        onClick={() => {\\n          if (!manualRef.current) {\\n            manualRef.current = Message.info({\\n              icon: \'🌊\',\\n              content: \'The waves lapping the shore endlessly\',\\n              duration: 0,\\n            });\\n          }\\n        }}\\n      >\\n        Open\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          if (manualRef.current) {\\n            manualRef.current.destroy();\\n            manualRef.current = null;\\n          }\\n        }}\\n      >\\n        Close\\n      </Button>\\n      <h3>DestroyAll</h3>\\n      <p>Destroy all references at some time, e.g. a route change happens.</p>\\n      <Button\\n        onClick={() => {\\n          Message.info({\\n            icon: \'🌙\',\\n            content: \'The signal disappears into the night\',\\n          });\\n        }}\\n      >\\n        Click me\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          Message.destroyAll();\\n          manualRef.current = null;\\n        }}\\n      >\\n        DestroyAll\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nexport default MessageDemo;\\n"},"modal":{"demoContent":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst promiseHandler = (duration = 1000) => new Promise(resolve => {\\n  const timer = setTimeout(() => {\\n    resolve(null);\\n    clearTimeout(timer);\\n  }, duration);\\n});\\n\\nconst ModalDemo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n  const [asyncVisible, setAsyncVisible] = useState<boolean>(false);\\n\\n  return (\\n    <div className=\\"modal-demo\\">\\n      <h2>Modal</h2>\\n      <h3>Basic Usage</h3>\\n      <Button onClick={() => setVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Modal\\n        title=\\"Title\\"\\n        visible={visible}\\n        onCancel={() => setVisible(false)}\\n        onConfirm={() => setVisible(false)}\\n      >\\n        Basic usage.\\n      </Modal>\\n      <h3>By Method</h3>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Hi\',\\n            content: \'Beach, waves, and night.\',\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          const modal = Modal.confirm({\\n            title: \'Hi\',\\n            content: (\\n              <>\\n                <span style={{ marginRight: 12 }}>\\n                  Beach, waves, and night.\\n                </span>\\n                <Button\\n                  onClick={() => {\\n                    modal.update({\\n                      content: (\\n                        <span style={{ lineHeight: \'32px\' }}>\\n                          Catch the moment.\\n                        </span>\\n                      ),\\n                    });\\n                  }}\\n                >\\n                  Update\\n                </Button>\\n              </>\\n            ),\\n          });\\n        }}\\n      >\\n        Update reference\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          for (let i = 0; i < 3 ; i++) {\\n            setTimeout(() => {\\n              Modal.confirm({\\n                title: \'Hi\',\\n                content: (\\n                  <Button onClick={Modal.destroyAll}>\\n                    Destroy all\\n                  </Button>\\n                ),\\n              });\\n            }, i * 300);\\n          }\\n        }}\\n      >\\n        Modal.destroyAll\\n      </Button>\\n      <h3>Async Logic</h3>\\n      <Modal\\n        title=\\"Async modal\\"\\n        visible={asyncVisible}\\n        onCancel={() => setAsyncVisible(false)}\\n        onConfirm={() => promiseHandler().then(() => setAsyncVisible(false))}\\n      >\\n        Async logic in basic usage.\\n      </Modal>\\n      <Button onClick={() => setAsyncVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Async method\',\\n            content: \'Async logic by method.\',\\n            onConfirm: promiseHandler,\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nexport default ModalDemo;\\n"},"radio":{"demoContent":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst { Group, Button } = Radio;\\n\\nconst RadioDemo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n  const [groupDisabled, setGroupDisabled] = useState<boolean>(false);\\n  const [outlineDisabled, setOutlineDisabled] = useState<boolean>(false);\\n  const [solidDisabled, setSolidDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <div className=\\"radio-demo\\">\\n      <h2>Radio</h2>\\n      <h3>Basic Usage</h3>\\n      <Radio checked>Cola</Radio>\\n      <Radio>Fanta</Radio>\\n      <h3>Disabled</h3>\\n      <Radio disabled={disabled} checked>Cola</Radio>\\n      <Radio disabled={disabled}>Fanta</Radio>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n      <h3>Group</h3>\\n      <Group defaultValue=\\"Cola\\" disabled={groupDisabled}>\\n        <Radio value=\\"Cola\\" key=\\"Cola\\">Cola</Radio>\\n        <Radio value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Radio>\\n        <Radio value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Radio>\\n        <Radio value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Radio>\\n      </Group>\\n      <Switch checked={groupDisabled} onChange={setGroupDisabled} />\\n      <h3>Button Group</h3>\\n      <p>\\n        <code>buttonStyle=\\"outline\\"</code>\\n      </p>\\n      <Group defaultValue=\\"Cola\\" disabled={outlineDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={outlineDisabled} onChange={setOutlineDisabled} />\\n      <p>\\n        <code>buttonStyle=\\"solid\\"</code>\\n      </p>\\n      <Group defaultValue=\\"Cola\\" buttonStyle=\\"solid\\" disabled={solidDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={solidDisabled} onChange={setSolidDisabled} />\\n    </div>\\n  );\\n};\\n\\nexport default RadioDemo;\\n"},"select":{"demoContent":"import React from \'react\';\\nimport Select from \'@components/select\';\\nimport \'./index.less\';\\n\\nconst { Option } = Select;\\n\\nconst SelectDemo = () => {\\n\\n  return (\\n    <div className=\\"select-demo\\">\\n      <h2>Select</h2>\\n      <h3>Basic Usage</h3>\\n      <Select placeholder=\\"Please select\\">\\n        <Option value={0}>Coca-Cola</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Sprite</Option>\\n        <Option value={3}>Fanta Orange</Option>\\n      </Select>\\n      <h3>Multiple Mode</h3>\\n      <Select placeholder=\\"Please select\\" multiple>\\n        <Option value={0}>Snow Beer Trekker</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Corona</Option>\\n        <Option value={3}>Budweiser</Option>\\n        <Option value={4}>Hoegaarden</Option>\\n      </Select>\\n    </div>\\n  );\\n};\\n\\nexport default SelectDemo;\\n"},"steps":{"demoContent":"import React from \'react\';\\nimport Steps from \'@components/steps\';\\nimport \'./index.less\';\\n\\nconst steps1 = [\\n  {\\n    value: 1,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 2,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 3,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 4,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n];\\n\\nconst steps2 = [\\n  {\\n    value: 1,\\n    title: \'S1\',\\n    description: \'Harry Potter and the Philosopher\\\\\'s Stone\',\\n  },\\n  {\\n    value: 2,\\n    title: \'S2\',\\n    description: \'Harry Potter and the Chamber of Secrets\',\\n  },\\n  {\\n    value: 3,\\n    title: \'S3\',\\n    description: \'Harry Potter and the Prisoner of Azkaban\',\\n  },\\n];\\n\\nconst StepsDemo = () => {\\n\\n  return (\\n    <div className=\\"steps-demo\\">\\n      <h2>Steps</h2>\\n      <h3>Basic Usage</h3>\\n      <Steps defaultValue={3} steps={steps1} />\\n      <h3>Vertical</h3>\\n      <Steps defaultValue={3} steps={steps2} vertical />\\n    </div>\\n  );\\n};\\n\\nexport default StepsDemo;\\n"},"switch":{"demoContent":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst SwitchDemo = () => {\\n  const [checked, setChecked] = useState<boolean>(false);\\n  const [loading, setLoading] = useState<boolean>(false);\\n  const [loadingChecked, setLoadingChecked] = useState<boolean>(false);\\n\\n  const handleLoadingCheckChange = nextChecked => {\\n    setLoading(true);\\n\\n    let timer = setTimeout(() => {\\n      setLoading(false);\\n      setLoadingChecked(nextChecked);\\n\\n      timer = null;\\n    }, 1000);\\n  };\\n\\n  return (\\n    <div className=\\"switch-demo\\">\\n      <h2>Switch</h2>\\n      <h3>Basic Usage</h3>\\n      <Switch checked={checked} onChange={setChecked} />\\n      <Switch checked={checked} disabled />\\n      <h3>Uncontrolled</h3>\\n      <Switch />\\n      <Switch defaultChecked />\\n      <h3>Loading</h3>\\n      <Switch\\n        loading={loading}\\n        checked={loadingChecked}\\n        onChange={handleLoadingCheckChange}\\n      />\\n    </div>\\n  );\\n};\\n\\nexport default SwitchDemo;\\n"},"table":{"demoContent":"import React from \'react\';\\nimport Table, { ColumnType } from \'@components/table\';\\nimport \'./index.less\';\\n\\nconst columns1: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'Line\',\\n    render: value => `Line ${value}`,\\n  },\\n  {\\n    key: \'starting\',\\n    name: \'Starting\',\\n  },\\n  {\\n    key: \'terminal\',\\n    name: \'Terminal\',\\n  },\\n];\\n\\nconst data1 = [\\n  {\\n    id: 4,\\n    starting: \'Anheqiao North\',\\n    terminal: \'Tiangongyuan\',\\n  },\\n  {\\n    id: 10,\\n    starting: \'Suzhoujie\',\\n    terminal: \'Huoqiying\',\\n  },\\n  {\\n    id: 13,\\n    starting: \'Xizhimen\',\\n    terminal: \'Dongzhimen\',\\n  },\\n];\\n\\nconst columns2: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'No\',\\n    width: 100,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'name\',\\n    name: \'Name\',\\n    width: 160,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'math\',\\n    name: \'Math\',\\n  },\\n  {\\n    key: \'program\',\\n    name: \'Program\',\\n  },\\n  {\\n    key: \'physics\',\\n    name: \'Physics\',\\n  },\\n  {\\n    key: \'psychology\',\\n    name: \'Psychology\',\\n  },\\n  {\\n    key: \'philosophy\',\\n    name: \'Philosophy\',\\n  },\\n  {\\n    key: \'natural\',\\n    name: \'Natural\',\\n  },\\n  {\\n    key: \'music\',\\n    name: \'Music\',\\n  },\\n  {\\n    key: \'total\',\\n    name: \'Total\',\\n    fixed: \'right\',\\n  },\\n];\\n\\nconst data2 = [\\n  {\\n    id: 1001,\\n    name: \'A\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1002,\\n    name: \'Dan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1003,\\n    name: \'Evan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1004,\\n    name: \'Johnson\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n];\\n\\nconst TableDemo = () => {\\n\\n  return (\\n    <div className=\\"table-demo\\">\\n      <h2>Table</h2>\\n      <h3>Basic Usage</h3>\\n      <Table columns={columns1} data={data1} />\\n      <h3>Fixed Column</h3>\\n      <Table columns={columns2} data={data2} contentWidth={2000} />\\n    </div>\\n  );\\n};\\n\\nexport default TableDemo;\\n"},"tabs":{"demoContent":"import React from \'react\';\\nimport Tabs from \'@components/tabs\';\\nimport \'./index.less\';\\n\\nconst { TabPane } = Tabs;\\n\\nconst tabs = [\\n  { label: \'🚊 Line 4\', value: 4, content: \'The center of the universe is here, I heard.\' },\\n  { label: \'🚊 Line 10\', value: 10, content: \'Transfer a subway, transfer a station.\' },\\n  { label: \'🚊 Line 13\', value: 13, content: \'Happy hot pot, happy day and night.\' },\\n];\\n\\nconst TabsDemo = () => {\\n\\n  return (\\n    <div className=\\"tabs-demo\\">\\n      <h2>Tabs</h2>\\n      <h3>Basic Usage</h3>\\n      <Tabs defaultValue={tabs[0].value}>\\n        {tabs.map(item => (\\n          <TabPane key={item.value} label={item.label} value={item.value}>\\n            {item.content}\\n          </TabPane>\\n        ))}\\n      </Tabs>\\n    </div>\\n  );\\n};\\n\\nexport default TabsDemo;\\n"},"tag":{"demoContent":"import React, { useEffect } from \'react\';\\nimport Tag from \'@components/tag\';\\nimport Message from \'@components/message\';\\nimport \'./index.less\';\\n\\nconst tags = [\'React\', \'Vue\', \'Angular\'];\\n\\nconst TagDemo = () => {\\n  useEffect(() => Message.destroyAll, []);\\n\\n  return (\\n    <div className=\\"tag-demo\\">\\n      <h2>Tag</h2>\\n      <h3>Basic Usage</h3>\\n      {tags.map(tag => (\\n        <Tag key={tag}>\\n          {tag}\\n        </Tag>\\n      ))}\\n      <h3>Closable</h3>\\n      {tags.map(tag => (\\n        <Tag\\n          key={tag}\\n          closable\\n          onClose={() => Message.success({ content: \'Tag closed!\' })}\\n        >\\n          {tag}\\n        </Tag>\\n      ))}\\n    </div>\\n  );\\n};\\n\\nexport default TagDemo;\\n"},"transition":{"demoContent":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Transition from \'@components/transition\';\\nimport \'./index.less\';\\n\\nconst TransitionDemo = () => {\\n  const [visible, setVisible] = useState<boolean>(true);\\n\\n  return (\\n    <div className=\\"transition-demo\\">\\n      <h2>Transition</h2>\\n      <h3>Basic Usage</h3>\\n      <Button\\n        style={{ margin: \'0 20px 12px 0\' }}\\n        onClick={() => setVisible(!visible)}\\n      >\\n        Toggle\\n      </Button>\\n      <Transition\\n        visible={visible}\\n        timeout={300}\\n        beforeEnter=\\"beforeEnter\\"\\n        entering=\\"entering\\"\\n        entered=\\"entered\\"\\n        leaving=\\"leaving\\"\\n      >\\n        <div className=\\"box\\" />\\n      </Transition>\\n    </div>\\n  );\\n};\\n\\nexport default TransitionDemo;\\n"},"trigger":{"demoContent":"import React, { useState, useRef } from \'react\';\\nimport Button from \'@components/button\';\\nimport Switch from \'@components/switch\';\\nimport Trigger from \'@components/trigger\';\\nimport Input from \'@components/input\';\\nimport Placement from \'./placement\';\\nimport \'./index.less\';\\n\\nexport const popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst { TextArea } = Input;\\n\\nconst TriggerDemo = () => {\\n  const [resizableVisible, setResizableVisible] = useState<boolean>(false);\\n\\n  const scrollRef = useRef<HTMLDivElement>(null);\\n\\n  return (\\n    <div className=\\"trigger-demo\\">\\n      <h2>Trigger</h2>\\n      <h3>Basic Usage</h3>\\n      <Trigger popup={popup}>\\n        <Button>Click me</Button>\\n      </Trigger>\\n      <h3>Trigger</h3>\\n      <Trigger popup={popup}>\\n        <Button>Click me</Button>\\n      </Trigger>\\n      <Trigger popup={popup} trigger=\\"hover\\">\\n        <Button>Hover me</Button>\\n      </Trigger>\\n      <Trigger popup={popup} trigger={[\'click\', \'hover\']}>\\n        <Button>Click or hover me</Button>\\n      </Trigger>\\n      <h3>Placement</h3>\\n      <Placement />\\n      <h3>Resizable</h3>\\n      <div style={{ display: \'flex\', alignItems: \'center\' }}>\\n        <Trigger popup={popup} visible={resizableVisible}>\\n          <TextArea\\n            style={{ width: 320, marginRight: 12 }}\\n            defaultValue=\\"Resize textarea to update popup position\\"\\n          />\\n        </Trigger>\\n        <Switch\\n          checked={resizableVisible}\\n          onChange={setResizableVisible}\\n        />\\n      </div>\\n      <h3>Scroll Container</h3>\\n      <div\\n        ref={scrollRef}\\n        style={{\\n          position: \'relative\',\\n          height: 300,\\n          border: \'1px solid var(--fog-border-color)\',\\n          overflow: \'auto\',\\n        }}\\n      >\\n        <div style={{ padding: 50, width: \'150%\', height: 500 }}>\\n          <Trigger\\n            popup={popup}\\n            getPopupMountNode={() => scrollRef.current}\\n          >\\n            <Button>Click me</Button>\\n          </Trigger>\\n          <Trigger\\n            popup={popup}\\n            trigger=\\"hover\\"\\n            getPopupMountNode={() => scrollRef.current}\\n          >\\n            <Button style={{ position: \'absolute\', top: 100, left: 200 }}>\\n              Hover me\\n            </Button>\\n          </Trigger>\\n        </div>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default TriggerDemo;\\n"}}')}}]);