"use strict";(self.webpackChunkfog_design=self.webpackChunkfog_design||[]).push([[1],{7618:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(7294),a=t(3935),i=t(4184),r=t.n(i),l=t(9074),s=t(2205),p=t(9940),u=t(3477),c=t(3379),d=t.n(c),m=t(7795),f=t.n(m),g=t(569),b=t.n(g),y=t(3565),h=t.n(y),v=t(9216),C=t.n(v),x=t(4589),D=t.n(x),V=t(9968),k={};k.styleTagTransform=D(),k.setAttributes=h(),k.insert=b().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=C();d()(V.Z,k);V.Z&&V.Z.locals&&V.Z.locals;var R=["visible","duration"];function w(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function B(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?w(Object(t),!0).forEach((function(e){S(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):w(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function S(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function P(n,e){if(null==n)return{};var t,o,a=function(n,e){if(null==n)return{};var t,o,a={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var T=l.O,O=function(){return o.createElement(p.Z,{type:"info-circle-fill",color:"var(--fog-primary-color)"})},I=function(){return o.createElement(p.Z,{type:"close-circle-fill",color:"var(--fog-danger-color)"})},E=function(){return o.createElement(p.Z,{type:"sigh-circle-fill",color:"var(--fog-warning-color)"})},M=function(){return o.createElement(p.Z,{type:"success-circle-fill",color:"var(--fog-success-color)"})},N=function(n){var e=n.className,t=n.icon,a=n.content;return o.createElement("div",{className:r()("".concat(T,"-message"),e)},t&&o.createElement("div",{className:"".concat(T,"-message__icon")},t),o.createElement("div",{className:"".concat(T,"-message__content")},a))};N.defaultProps={icon:o.createElement(O,null)};var L=[],_=document.createElement("div");_.style.position="fixed",_.style.top="0px",_.style.left="0px",_.style.right="0px",_.style.zIndex="10",_.style.pointerEvents="none",document.body.appendChild(_),N.info=function(n){var e,t=document.createElement("div");t.style.textAlign="center",_.appendChild(t);var i=function(n){var i=n.visible,l=void 0===i||i,p=n.duration,c=void 0===p?3e3:p,d=P(n,R);l?0!==c&&(e=(0,u.cX)(r,c)):(0,u.lo)(e),a.render(o.createElement(s.Z,{visible:l,beforeEnter:"".concat(T,"-message--before-enter"),entering:"".concat(T,"-message--entering"),entered:"".concat(T,"-message--entered"),leaving:"".concat(T,"-message--leaving"),afterLeave:function(){a.unmountComponentAtNode(t),_.contains(t)&&_.removeChild(t)}},o.createElement(N,d)),t)},r=function(){i(B(B({},n),{},{visible:!1})),L=L.filter((function(n){return n!==l}))};i(n);var l={destroy:r};return L.push(l),l},N.error=function(n){return N.info(B({icon:o.createElement(I,null)},n))},N.warning=function(n){return N.info(B({icon:o.createElement(E,null)},n))},N.success=function(n){return N.info(B({icon:o.createElement(M,null)},n))},N.destroyAll=function(){for(;L.length;){L.pop().destroy()}};const A=N},9960:(n,e,t)=>{t.d(e,{Z:()=>T});var o=t(7294),a=t(4184),i=t.n(a),r=t(9074);const l=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return(0,o.useMemo)((function(){return Array.isArray(n)?n:e}),[n,e])};var s=t(3477),p=t(3379),u=t.n(p),c=t(7795),d=t.n(c),m=t(569),f=t.n(m),g=t(3565),b=t.n(g),y=t(9216),h=t.n(y),v=t(4589),C=t.n(v),x=t(6417),D={};D.styleTagTransform=C(),D.setAttributes=b(),D.insert=f().bind(null,"head"),D.domAPI=d(),D.insertStyleElement=h();u()(x.Z,D);x.Z&&x.Z.locals&&x.Z.locals;function V(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function k(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?V(Object(t),!0).forEach((function(e){R(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):V(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function R(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function w(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==t)return;var o,a,i=[],r=!0,l=!1;try{for(t=t.call(n);!(r=(o=t.next()).done)&&(i.push(o.value),!e||i.length!==e);r=!0);}catch(n){l=!0,a=n}finally{try{r||null==t.return||t.return()}finally{if(l)throw a}}return i}(n,e)||function(n,e){if(!n)return;if("string"==typeof n)return B(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return B(n,e)}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}var S=r.O,P=function(n){var e,t=n.className,a=n.rowKey,r=n.contentWidth,p=n.data,u=n.columns,c=(0,o.useRef)(null),d=w((0,o.useState)({}),2),m=d[0],f=d[1],g=w((0,o.useState)(!1),2),b=g[0],y=g[1],h=w((0,o.useState)(!1),2),v=h[0],C=h[1],x=(0,o.useMemo)((function(){return Array.isArray(u)?u.map((function(n){return k(k({},n),{},{fixed:(e=n.fixed,["left","right"].includes(e)?n.fixed:void 0)});var e})):[]}),[u]),D=l(p),V=(0,o.useMemo)((function(){return x.reduce((function(n,e){return k(k({},n),{},R({},e.key,o.createRef()))}),{})}),[x]),B=(0,o.useMemo)((function(){return x.filter((function(n){return"left"===n.fixed})).map((function(n){return n.key}))}),[x]),P=(0,o.useMemo)((function(){return x.filter((function(n){return"right"===n.fixed})).map((function(n){return n.key}))}),[x]),T=function(n){return B.length&&B[B.length-1]===n},O=function(n){return P.length&&P[0]===n},I=function(){if(c.current){var n=c.current,e=n.scrollLeft,t=n.scrollWidth,o=n.clientWidth;y(0===e),C(e+o===t)}},E=function(){var n={},e=0,t=0;B.forEach((function(t){V[t].current&&(n[t]={left:e},e+=V[t].current.offsetWidth)})),P.reverse().forEach((function(e){V[e].current&&(n[e]={right:t},t+=V[e].current.offsetWidth)})),f(n),I()};return(0,o.useLayoutEffect)((function(){if(ResizeObserver){var n=[];return Object.keys(V).forEach((function(e){var t=new ResizeObserver(E);t.observe(V[e].current),n.push(t)})),function(){return n.forEach((function(n){return n.disconnect()}))}}}),[V]),(0,o.useLayoutEffect)((function(){if(c.current)return c.current.addEventListener("scroll",I),function(){return c.current.removeEventListener("scroll",I)}}),[]),o.createElement("div",{className:i()(t,(e={},R(e,"".concat(S,"-table"),!0),R(e,"".concat(S,"-table--scroll-left-end"),b),R(e,"".concat(S,"-table--scroll-right-end"),v),e))},o.createElement("div",{className:"".concat(S,"-table__content"),ref:c},o.createElement("table",{width:r},o.createElement("thead",{className:"".concat(S,"-table__thead")},o.createElement("tr",{className:"".concat(S,"-table__tr")},x.map((function(n){var e,t=n.key,a=n.fixed;return o.createElement("th",{className:i()((e={},R(e,"".concat(S,"-table__cell"),!0),R(e,"".concat(S,"-table__cell--fixed"),a),R(e,"".concat(S,"-table__cell--fixed-last"),T(t)),R(e,"".concat(S,"-table__cell--fixed-first"),O(t)),e)),key:t,ref:V[t],style:m[t]||{}},n.name)})))),o.createElement("tbody",{className:"".concat(S,"-table__tbody")},D.map((function(n,e){return o.createElement("tr",{className:"".concat(S,"-table__tr"),key:a||e},x.map((function(t){var a,r=t.key,l=t.width,p=t.fixed,u=t.render;return o.createElement("td",{className:i()((a={},R(a,"".concat(S,"-table__cell"),!0),R(a,"".concat(S,"-table__cell--fixed"),p),R(a,"".concat(S,"-table__cell--fixed-last"),T(r)),R(a,"".concat(S,"-table__cell--fixed-first"),O(r)),a)),key:r,width:l,style:m[r]||{}},(0,s.mf)(u)?u(n[r],n,e):n[r])})))}))))))};P.defaultProps={};const T=P},7385:(n,e,t)=>{t.d(e,{Z:()=>D});var o=t(7294),a=t(6974),i=t(9074),r=t(9940),l=t(3379),s=t.n(l),p=t(7795),u=t.n(p),c=t(569),d=t.n(c),m=t(3565),f=t.n(m),g=t(9216),b=t.n(g),y=t(4589),h=t.n(y),v=t(229),C={};C.styleTagTransform=h(),C.setAttributes=f(),C.insert=d().bind(null,"head"),C.domAPI=u(),C.insertStyleElement=b();s()(v.Z,C);v.Z&&v.Z.locals&&v.Z.locals;var x=i.O;const D=function(n){var e=n.children,t=(0,a.TH)().pathname,i="https://github.com/zhuangtianyu/fog-design/blob/master/src/components".concat(t,"/index.tsx");return o.createElement("h1",{className:"".concat(x,"-link-header")},e,o.createElement("a",{className:"".concat(x,"-link-header__link"),href:i,target:"_blank"},o.createElement(r.Z,{className:"".concat(x,"-link-header__icon"),type:"github-circle-fill"})))}},9968:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(8081),a=t.n(o),i=t(3645),r=t.n(i)()(a());r.push([n.id,".fog-message {\n  display: inline-block;\n  padding: 10px 16px;\n  font-size: 0;\n  line-height: 22px;\n  box-shadow: 0 0 8px var(--fog-shadow-color);\n  border-radius: 2px;\n  background-color: var(--fog-panel-color);\n  margin-top: 16px;\n  transition: all 0.3s;\n  transform-origin: 50% 0;\n  pointer-events: all;\n}\n.fog-message,\n.fog-message *,\n.fog-message *:before,\n.fog-message *:after {\n  box-sizing: border-box;\n}\n.fog-message--before-enter {\n  opacity: 0;\n  transform: scaleY(0);\n}\n.fog-message--entering {\n  opacity: 1;\n  transform: scaleY(1);\n}\n.fog-message--entered {\n  opacity: 1;\n  transform: scaleY(1);\n}\n.fog-message--leaving {\n  opacity: 0;\n  transform: scaleY(0);\n}\n.fog-message__icon {\n  margin-right: 8px;\n}\n.fog-message__icon,\n.fog-message__content {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: 14px;\n}\n.fog-message .fog-icon {\n  display: block;\n  font-size: 16px;\n}\n",""]);const l=r},6417:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(8081),a=t.n(o),i=t(3645),r=t.n(i)()(a());r.push([n.id,".fog-table {\n  border: 1px solid var(--fog-border-color);\n  border-radius: 2px;\n  overflow: hidden;\n}\n.fog-table,\n.fog-table *,\n.fog-table *:before,\n.fog-table *:after {\n  box-sizing: border-box;\n}\n.fog-table__content {\n  overflow: auto hidden;\n}\n.fog-table table {\n  min-width: 100%;\n  border-spacing: 0;\n  border-collapse: separate;\n}\n.fog-table__cell {\n  position: relative;\n  padding: 10px 16px;\n  color: var(--fog-color);\n  font-size: 14px;\n  text-align: left;\n  line-height: 22px;\n  border-right: 1px solid var(--fog-border-color);\n  border-bottom: 1px solid var(--fog-border-color);\n  background-color: var(--fog-background-color);\n}\n.fog-table__cell--fixed {\n  position: sticky;\n  z-index: 2;\n}\n.fog-table__cell--fixed-last::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: -1px;\n  bottom: -1px;\n  width: 30px;\n  transform: translateX(100%);\n  box-shadow: inset 10px 0 8px -8px var(--fog-border-color);\n  transition: box-shadow 0.3s;\n  pointer-events: none;\n}\n.fog-table--scroll-left-end .fog-table__cell--fixed-last::after {\n  box-shadow: none;\n}\n.fog-table__cell--fixed-first::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: -1px;\n  width: 30px;\n  transform: translateX(-100%);\n  box-shadow: inset -10px 0 8px -8px var(--fog-border-color);\n  border-right: 1px solid var(--fog-border-color);\n  transition: box-shadow 0.3s;\n  pointer-events: none;\n}\n.fog-table--scroll-right-end .fog-table__cell--fixed-first::after {\n  box-shadow: none;\n  border-right-color: var(--fog-transparent);\n}\n.fog-table__cell:last-child {\n  border-right: none;\n}\n.fog-table__tbody .fog-table__tr:last-child .fog-table__cell {\n  border-bottom: none;\n}\n",""]);const l=r},229:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(8081),a=t.n(o),i=t(3645),r=t.n(i)()(a());r.push([n.id,".fog-link-header,\n.fog-link-header *,\n.fog-link-header *:before,\n.fog-link-header *:after {\n  box-sizing: border-box;\n}\n.fog-link-header__link {\n  color: var(--fog-color);\n}\n.fog-link-header__icon {\n  font-size: 18px;\n  margin-left: 12px;\n}\n",""]);const l=r},7368:n=>{n.exports=JSON.parse('{"w":{"button":{"demos":{"demo-1":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\">\\n        Primary\\n      </Button>\\n      <Button>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\">\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\">\\n        <Icon type=\\"calendar\\" />\\n        Date\\n      </Button>\\n      <Button>\\n        <Icon type=\\"email\\" />\\n        Send\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Trigger\\n        <Icon type=\\"down\\" />\\n      </Button>\\n      <Button type=\\"link\\">\\n        <Icon type=\\"link\\" />\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        <Icon type=\\"edit\\" />\\n        Edit\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" loading>\\n        Loading\\n      </Button>\\n      <Button\\n        loading={loading}\\n        onClick={() => {\\n          setLoading(true);\\n\\n          setTimeout(() => setLoading(false), 1000);\\n        }}\\n      >\\n        <Icon type=\\"email\\" />\\n        Click me\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" disabled>\\n        Primary\\n      </Button>\\n      <Button disabled>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" disabled>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" disabled>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" disabled>\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" danger>\\n        Primary\\n      </Button>\\n      <Button danger>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" danger>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" danger>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" danger>\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-6":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" shape=\\"round\\">\\n        Primary\\n      </Button>\\n      <Button shape=\\"round\\">\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" shape=\\"round\\">\\n        Dashed\\n      </Button>\\n      <Button shape=\\"round\\">\\n        <Icon type=\\"search\\" />\\n        Search\\n      </Button>\\n      <Button shape=\\"circle\\">\\n        <Icon type=\\"search\\" />\\n      </Button>\\n      <Button shape=\\"circle\\">\\n        F\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-7":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button.Group>\\n        <Button type=\\"primary\\">\\n          <Icon type=\\"left\\" />\\n        </Button>\\n        <Button type=\\"primary\\">\\n          <Icon type=\\"right\\" />\\n        </Button>\\n      </Button.Group>\\n      <Button.Group>\\n        <Button>\\n          Day\\n        </Button>\\n        <Button>\\n          Night\\n        </Button>\\n      </Button.Group>\\n      <Button.Group>\\n        <Button shape=\\"round\\">\\n          Lighter\\n        </Button>\\n        <Button type=\\"primary\\" shape=\\"round\\">\\n          Normal\\n        </Button>\\n        <Button shape=\\"round\\" disabled>\\n          Bold\\n        </Button>\\n        <Button shape=\\"round\\">\\n          Bolder\\n        </Button>\\n      </Button.Group>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"type","type":"primary | dashed | link | text","defaultValue":"-","description":"-"},{"name":"shape","type":"round | circle","defaultValue":"-","description":"-"},{"name":"danger","type":"boolean","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"}],"group":[{"name":"className","type":"string","defaultValue":"-","description":"-"}]}},"checkbox":{"demos":{"demo-1":"import React from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\n\\nconst Demo = () => <Checkbox defaultChecked>Cola</Checkbox>;\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Checkbox defaultChecked disabled={disabled}>Cola</Checkbox>\\n      <Checkbox disabled={disabled}>Fanta</Checkbox>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst { Group } = Checkbox;\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Group defaultValue={[\'Cola\']} disabled={disabled}>\\n        <Checkbox value=\\"Cola\\" key=\\"Cola\\">Cola</Checkbox>\\n        <Checkbox value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Checkbox>\\n        <Checkbox value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Checkbox>\\n        <Checkbox value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Checkbox>\\n      </Group>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport \'./index.less\';\\n\\nconst { Group } = Checkbox;\\n\\nconst checkboxes = [\'Cola\', \'Pepsi\', \'Fanta\', \'Sprite\'];\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState(checkboxes.filter(item => item !== \'Pepsi\'));\\n\\n  return (\\n    <>\\n      <Checkbox\\n        style={{ display: \'block\', marginBottom: 12 }}\\n        indeterminate={value.length && value.length < checkboxes.length}\\n        checked={value.length === checkboxes.length}\\n        onChange={event => setValue(event.target.checked ? checkboxes : [])}\\n      >\\n        Check all\\n      </Checkbox>\\n      <Group value={value} onChange={setValue}>\\n        {checkboxes.map(item => (\\n          <Checkbox value={item} key={item}>{item}</Checkbox>\\n        ))}\\n      </Group>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"indeterminate","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"ChangeEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"group":[{"name":"className","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"string[]","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"string[]","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: string[]) => void","defaultValue":"-","description":"-"}]}},"date-picker":{"demos":{"demo-1":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst { RangePicker } = DatePicker;\\n\\nconst Demo = () => (\\n  <>\\n    <DatePicker\\n      style={{ marginBottom: 12 }}\\n      placeholder=\\"Please select\\"\\n    />\\n    <RangePicker\\n      placeholder={[\'Start date\', \'End date\']}\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst { RangePicker } = DatePicker;\\n\\nconst Demo = () => (\\n  <>\\n    <DatePicker\\n      style={{ marginBottom: 12 }}\\n      placeholder=\\"Please select\\"\\n      disabled\\n    />\\n    <RangePicker\\n      placeholder={[\'Start date\', \'End date\']}\\n      disabled\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst { RangePicker } = DatePicker;\\n\\nconst disabledDate = value =>\\n  new Date(value).getDate() >= 20 ||\\n  new Date(value).getDate() === 12;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <DatePicker\\n        style={{ marginBottom: 12 }}\\n        placeholder=\\"Please select\\"\\n        disabledDate={disabledDate}\\n      />\\n      <RangePicker\\n        placeholder={[\'Start date\', \'End date\']}\\n        disabledDate={disabledDate}\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>mode=\\"month\\"</p>\\n      <DatePicker placeholder=\\"Please select\\" mode=\\"month\\" />\\n      <p>mode=\\"year\\"</p>\\n      <DatePicker placeholder=\\"Please select\\" mode=\\"year\\" />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"number","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"number","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: number) => void","defaultValue":"-","description":"-"},{"name":"open","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultOpen","type":"boolean","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(open: boolean) => void","defaultValue":"-","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"format","type":"string","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabledDate","type":"(value: number) => boolean","defaultValue":"-","description":"-"},{"name":"mode","type":"date | month | year","defaultValue":"date","description":"-"},{"name":"renderFooter","type":"() => ReactElement<any, string | JSXElementConstructor<any>>","defaultValue":"-","description":"-"},{"name":"clearable","type":"boolean","defaultValue":"true","description":"-"}],"date-panel":[],"month-panel":[],"panel-cell":[],"range-picker":[],"year-panel":[]}},"drawer":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Drawer from \'@components/drawer\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button onClick={() => setVisible(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visible}\\n        onClose={() => setVisible(false)}\\n      >\\n        Drawer Content\\n      </Drawer>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Drawer from \'@components/drawer\';\\nimport Button from \'@components/button\';\\nimport Radio from \'@components/radio\';\\nimport { kebabCaseToPascalCase } from \'@utils/index\';\\nimport \'./index.less\';\\n\\nconst placements = [\'top\', \'right\', \'bottom\', \'left\'];\\n\\nconst DrawerContent = () => {\\n  const [count, setCount] = useState<number>(0);\\n\\n  return (\\n    <div className=\\"drawer-content\\">\\n      <p>Clicked {count} times, state preserved.</p>\\n      <Button onClick={() => setCount(count + 1)}>\\n        Click me\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n  const [placement, setPlacement] = useState<string>(placements[1]);\\n\\n  return (\\n    <>\\n      <Radio.Group\\n        style={{ marginRight: 12 }}\\n        value={placement}\\n        onChange={setPlacement}\\n      >\\n        {placements.map(item => (\\n          <Radio value={item} key={item}>\\n            {kebabCaseToPascalCase(item)}\\n          </Radio>\\n        ))}\\n      </Radio.Group>\\n      <Button onClick={() => setVisible(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visible}\\n        placement={placement}\\n        onClose={() => setVisible(false)}\\n      >\\n        <DrawerContent />\\n      </Drawer>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"false","description":"-"},{"name":"width","type":"string | number","defaultValue":"300","description":"-"},{"name":"height","type":"string | number","defaultValue":"300","description":"-"},{"name":"title","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"placement","type":"string","defaultValue":"right","description":"-"},{"name":"showClose","type":"boolean","defaultValue":"true","description":"-"},{"name":"escClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"maskClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"false","description":"-"},{"name":"onClose","type":"() => void","defaultValue":"-","description":"-"},{"name":"afterClose","type":"() => void","defaultValue":"-","description":"-"}]}},"grid":{"demos":{"demo-1":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Row>\\n        <Col span={24}>\\n          <div>col-24</div>\\n        </Col>\\n      </Row>\\n      <Row>\\n        <Col span={12}>\\n          <div>col-12</div>\\n        </Col>\\n        <Col span={12}>\\n          <div>col-12</div>\\n        </Col>\\n      </Row>\\n      <Row>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Row gutter={12}>\\n        <Col span={24}>\\n          <div>col-24</div>\\n        </Col>\\n      </Row>\\n      <Row gutter={12}>\\n        <Col span={12}>\\n          <div>col-12</div>\\n        </Col>\\n        <Col span={12}>\\n          <div>col-12</div>\\n        </Col>\\n      </Row>\\n      <Row gutter={12}>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div>col-6</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>justify=\\"start\\"</p>\\n      <Row justify=\\"start\\">\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n      </Row>\\n      <p>justify=\\"space-between\\"</p>\\n      <Row justify=\\"space-between\\">\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={4}>\\n          <div>col-4</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>align=\\"start\\"</p>\\n      <Row align=\\"start\\" gutter={12}>\\n        <Col span={6}>\\n          <div style={{ height: 84 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 48 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 72 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 48 }}>col-6</div>\\n        </Col>\\n      </Row>\\n      <p>align=\\"center\\"</p>\\n      <Row align=\\"center\\" gutter={12}>\\n        <Col span={6}>\\n          <div style={{ height: 84 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 48 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 72 }}>col-6</div>\\n        </Col>\\n        <Col span={6}>\\n          <div style={{ height: 48 }}>col-6</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Row>\\n        <Col span={12}>\\n          <div>col-12</div>\\n        </Col>\\n        <Col span={6} offset={6}>\\n          <div>col-6</div>\\n        </Col>\\n      </Row>\\n      <Row>\\n        <Col span={6} offset={6}>\\n          <div>col-6</div>\\n        </Col>\\n        <Col span={6} offset={6}>\\n          <div>col-6</div>\\n        </Col>\\n      </Row>\\n      <Row>\\n        <Col span={4} offset={6}>\\n          <div>col-4</div>\\n        </Col>\\n        <Col span={12} offset={2}>\\n          <div>col-12</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-6":"import React from \'react\';\\nimport Grid from \'@components/grid\';\\n\\nconst { Row, Col } = Grid;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>wrap=\\"true\\"</p>\\n      <Row>\\n        <Col span={24}>\\n          <div>col-24</div>\\n        </Col>\\n        <Col span={16}>\\n          <div>col-16</div>\\n        </Col>\\n      </Row>\\n      <p>wrap=\\"false\\"</p>\\n      <Row wrap={false}>\\n        <Col span={24}>\\n          <div>col-24</div>\\n        </Col>\\n        <Col span={16}>\\n          <div>col-16</div>\\n        </Col>\\n      </Row>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[],"col":[{"name":"span","type":"number","defaultValue":"-","description":"-"},{"name":"offset","type":"number","defaultValue":"-","description":"-"}],"row":[{"name":"wrap","type":"boolean","defaultValue":"true","description":"-"},{"name":"gutter","type":"number","defaultValue":"-","description":"-"},{"name":"align","type":"start | center | end | stretch","defaultValue":"-","description":"-"},{"name":"justify","type":"start | center | end | space-around | space-between | space-evenly","defaultValue":"-","description":"-"}]}},"icon":{"demos":{},"apiRows":{"default":[{"name":"type","type":"up | down | left | right | double-up | double-down | double-left | double-right | close | check | search | edit | calendar | email | link | code | copy | more | loading | loading-3/4 | exchange | close-circle-fill | success-circle-fill | info-circle-fill | sigh-circle-fill | doubt-circle-fill | github-circle-fill | triangle-right-fill","defaultValue":"-","description":"-"},{"name":"size","type":"string | number","defaultValue":"-","description":"-"},{"name":"color","type":"string","defaultValue":"-","description":"-"}]}},"input":{"demos":{"demo-1":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => <Input placeholder=\\"Please input\\" />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Input\\n      placeholder=\\"Please input\\"\\n      defaultValue=\\"Your emotion\\"\\n      clearable\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix={<Icon type=\\"email\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix=\\"https://\\"\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix={<Icon type=\\"edit\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix=\\"@163.com\\"\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => (\\n  <>\\n    <Input\\n      placeholder=\\"Please input\\"\\n      disabled\\n    />\\n    <Input\\n      placeholder=\\"Please input\\"\\n      prefix={<Icon type=\\"email\\" />}\\n      suffix=\\"@163.com\\"\\n      disabled\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-6":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => <Input placeholder=\\"Please Input\\" readOnly />;\\n\\nexport default Demo;\\n","demo-7":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Input\\n      placeholder=\\"Please Input\\"\\n      type=\\"password\\"\\n      defaultValue=\\"12345678\\"\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n","demo-8":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst { TextArea } = Input;\\n\\nconst Demo = () => <TextArea placeholder=\\"Please Input\\" />;\\n\\nexport default Demo;\\n","demo-9":"import React, { useEffect } from \'react\';\\nimport Input from \'@components/input\';\\nimport Message from \'@components/message\';\\n\\nconst Demo = () => {\\n  useEffect(() => () => Message.destroyAll(), []);\\n\\n  return (\\n    <Input\\n      placeholder=\\"Please Input\\"\\n      onEnter={event => {\\n        Message.info({\\n          content: `Entered value: ${event.currentTarget.value}`,\\n        });\\n      }}\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"readOnly","type":"boolean","defaultValue":"-","description":"-"},{"name":"prefix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"suffix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"clearable","type":"boolean","defaultValue":"-","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"onEnter","type":"(event: KeyboardEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"},{"name":"onChange","type":"(event: ChangeEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"},{"name":"onKeyDown","type":"(event: KeyboardEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"}],"textarea":[],"wrapper":[]}},"input-number":{"demos":{"demo-1":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => <InputNumber placeholder=\\"Please input\\" />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => <InputNumber placeholder=\\"Please input\\" prefix=\\"$\\" />;\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => (\\n  <InputNumber\\n    placeholder=\\"Please input\\"\\n    prefix=\\"$\\"\\n    suffix=\\"/L\\"\\n  />\\n);\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => (\\n  <>\\n    <p>Set keepControl to false, then the control will only show on hover or focus.</p>\\n    <InputNumber placeholder=\\"Please input\\" keepControl={false} />\\n    <InputNumber placeholder=\\"Please input\\" prefix=\\"$\\" keepControl={false} />\\n    <InputNumber\\n      placeholder=\\"Please input\\"\\n      prefix=\\"$\\"\\n      suffix=\\"/L\\"\\n      keepControl={false}\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => (\\n  <>\\n    <p>Set min value to 0 and max value to 10.</p>\\n    <InputNumber placeholder=\\"Please input\\" min={0} max={10} />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-6":"import React, { useEffect } from \'react\';\\nimport InputNumber from \'@components/input-number\';\\nimport Message from \'@components/message\';\\n\\nconst Demo = () => {\\n  useEffect(() => () => Message.destroyAll(), []);\\n\\n  return (\\n    <>\\n      <p>Set min value to 0 and max value to 10.</p>\\n      <InputNumber\\n        placeholder=\\"Please input\\"\\n        min={0}\\n        max={10}\\n        onEnter={event => {\\n          Message.info({\\n            content: `Entered value: ${event.currentTarget.value}`,\\n          });\\n        }}\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-7":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => <InputNumber placeholder=\\"Please input\\" disabled />;\\n\\nexport default Demo;\\n","demo-8":"import React from \'react\';\\nimport InputNumber from \'@components/input-number\';\\n\\nconst Demo = () => (\\n  <>\\n    <p>Set showControl to false, then the control will never show.</p>\\n    <InputNumber placeholder=\\"Please input\\" showControl={false} />\\n    <InputNumber placeholder=\\"Please input\\" prefix=\\"$\\" showControl={false} />\\n    <InputNumber\\n      placeholder=\\"Please input\\"\\n      prefix=\\"$\\"\\n      suffix=\\"/L\\"\\n      showControl={false}\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"InputNumberValue","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"readOnly","type":"boolean","defaultValue":"-","description":"-"},{"name":"prefix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"suffix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"min","type":"number","defaultValue":"-","description":"-"},{"name":"max","type":"number","defaultValue":"-","description":"-"},{"name":"step","type":"number","defaultValue":"1","description":"-"},{"name":"showControl","type":"boolean","defaultValue":"true","description":"-"},{"name":"keepControl","type":"boolean","defaultValue":"true","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"onBlur","type":"(event: FocusEvent<HTMLInputElement, Element>) => void","defaultValue":"-","description":"-"},{"name":"onEnter","type":"(event: KeyboardEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"},{"name":"onChange","type":"(event: ChangeEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"}]}},"loading":{"demos":{"demo-1":"import React from \'react\';\\nimport Loading from \'@components/loading\';\\n\\nconst Demo = () => <Loading />;\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n        tip=\\"Loading...\\"\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n        icon={<Icon type=\\"loading-3/4\\" />}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"className","type":"string","defaultValue":"-","description":"-"},{"name":"wrapperClassName","type":"string","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"true","description":"-"},{"name":"icon","type":"ReactElement<any, string | JSXElementConstructor<any>>","defaultValue":"<Icon type=\\"loading\\" />","description":"-"},{"name":"tip","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"tipBackground","type":"boolean","defaultValue":"true","description":"-"}]}},"menu":{"demos":{"demo-1":"import React from \'react\';\\nimport Menu from \'@components/menu\';\\n\\nconst { SubMenu, ItemGroup, Item } = Menu;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Menu\\n      defaultOpens={[\'Navigation 1\', \'Navigation 2\', \'SubMenu\']}\\n      defaultValue=\\"Option 1\\"\\n    >\\n      <SubMenu label=\\"Navigation 1\\" key=\\"Navigation 1\\">\\n        <ItemGroup label=\\"Group-1\\" key=\\"Group-1\\">\\n          <Item label=\\"Option 1\\" key=\\"Option 1\\" />\\n          <Item label=\\"Option 2\\" key=\\"Option 2\\" />\\n        </ItemGroup>\\n        <ItemGroup label=\\"Group-2\\" key=\\"Group-2\\">\\n          <Item label=\\"Option 3\\" key=\\"Option 3\\" />\\n          <Item label=\\"Option 4\\" key=\\"Option 4\\" />\\n        </ItemGroup>\\n      </SubMenu>\\n      <SubMenu label=\\"Navigation 2\\" key=\\"Navigation 2\\">\\n        <Item label=\\"Option 5\\" key=\\"Option 5\\" />\\n        <Item label=\\"Option 6\\" key=\\"Option 6\\" />\\n        <SubMenu label=\\"SubMenu\\" key=\\"SubMenu\\">\\n          <Item label=\\"Option 7\\" key=\\"Option 7\\" />\\n          <Item label=\\"Option 8\\" key=\\"Option 8\\" />\\n        </SubMenu>\\n      </SubMenu>\\n      <Item label=\\"Option 9\\" key=\\"Option 9\\" />\\n      <Item label=\\"Option 10\\" key=\\"Option 10\\" />\\n    </Menu>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"opens","type":"any[]","defaultValue":"-","description":"-"},{"name":"defaultOpens","type":"any[]","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(opens: any[]) => void","defaultValue":"-","description":"-"}],"menu-item":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}],"menu-item-group":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}],"submenu":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}]}},"message":{"demos":{"demo-1":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Button onClick={() => Message.info({ content: \'Basic usage\' })}>\\n      Click me\\n    </Button>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button onClick={() => Message.info({ content: \'Subscribe the news\' })}>\\n        Info\\n      </Button>\\n      <Button onClick={() => Message.error({ content: \'Login required\' })}>\\n        Error\\n      </Button>\\n      <Button onClick={() => Message.warning({ content: \'Remember password\' })}>\\n        Warning\\n      </Button>\\n      <Button onClick={() => Message.success({ content: \'Login success\' })}>\\n        Success\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => Message.error({\\n          icon: <Icon type=\\"doubt-circle-fill\\" color=\\"var(--fog-danger-color)\\" />,\\n          content: \'Are you sure?\',\\n        })}\\n      >\\n        Doubt\\n      </Button>\\n      <Button\\n        onClick={() => Message.info({\\n          icon: null,\\n          content: \'Just no icon\',\\n        })}\\n      >\\n        No icon\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useEffect, useRef } from \'react\';\\nimport Message, { MessageReference } from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n  const manualRef = useRef<MessageReference>(null);\\n\\n  useEffect(() => {\\n    return () => {\\n      if (manualRef.current) {\\n        manualRef.current.destroy();\\n        manualRef.current = null;\\n      }\\n    };\\n  }, []);\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          if (!manualRef.current) {\\n            manualRef.current = Message.info({\\n              content: \'The waves lapping the shore endlessly\',\\n              duration: 0,\\n            });\\n          }\\n        }}\\n      >\\n        Open\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          if (manualRef.current) {\\n            manualRef.current.destroy();\\n            manualRef.current = null;\\n          }\\n        }}\\n      >\\n        Close\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => Message.info({\\n          content: \'The signal disappears into the night\',\\n        })}\\n      >\\n        Click me\\n      </Button>\\n      <Button onClick={() => Message.destroyAll()}>\\n        DestroyAll\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"icon","type":"ReactNode","defaultValue":"<InfoIcon />","description":"-"},{"name":"content","type":"ReactChild","defaultValue":"-","description":"-"}]}},"modal":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button onClick={() => setVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Modal\\n        title=\\"Title\\"\\n        visible={visible}\\n        onCancel={() => setVisible(false)}\\n        onConfirm={() => setVisible(false)}\\n      >\\n        Basic usage.\\n      </Modal>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Hi\',\\n            content: \'Beach, waves, and night.\',\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          const modal = Modal.confirm({\\n            title: \'Hi\',\\n            content: (\\n              <>\\n                <span style={{ marginRight: 12 }}>\\n                  Beach, waves, and night.\\n                </span>\\n                <Button\\n                  onClick={() => {\\n                    modal.update({\\n                      content: (\\n                        <span style={{ lineHeight: \'32px\' }}>\\n                          Catch the moment.\\n                        </span>\\n                      ),\\n                    });\\n                  }}\\n                >\\n                  Update\\n                </Button>\\n              </>\\n            ),\\n          });\\n        }}\\n      >\\n        Update reference\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          for (let i = 0; i < 3 ; i++) {\\n            setTimeout(() => {\\n              Modal.confirm({\\n                title: \'Hi\',\\n                content: (\\n                  <Button onClick={Modal.destroyAll}>\\n                    Destroy all\\n                  </Button>\\n                ),\\n              });\\n            }, i * 300);\\n          }\\n        }}\\n      >\\n        Modal.destroyAll\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst promiseHandler = (duration = 1000) => new Promise(resolve => {\\n  const timer = setTimeout(() => {\\n    resolve(null);\\n    clearTimeout(timer);\\n  }, duration);\\n});\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Modal\\n        title=\\"Async modal\\"\\n        visible={visible}\\n        onCancel={() => setVisible(false)}\\n        onConfirm={() => promiseHandler().then(() => setVisible(false))}\\n      >\\n        Async logic in basic usage.\\n      </Modal>\\n      <Button onClick={() => setVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Async method\',\\n            content: \'Async logic by method.\',\\n            onConfirm: promiseHandler,\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"false","description":"-"},{"name":"width","type":"number","defaultValue":"420","description":"-"},{"name":"title","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"content","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"showClose","type":"boolean","defaultValue":"true","description":"-"},{"name":"showCancel","type":"boolean","defaultValue":"true","description":"-"},{"name":"cancelText","type":"string","defaultValue":"Cancel","description":"-"},{"name":"confirmText","type":"string","defaultValue":"Confirm","description":"-"},{"name":"cancelLoading","type":"boolean","defaultValue":"-","description":"-"},{"name":"confirmLoading","type":"boolean","defaultValue":"-","description":"-"},{"name":"cancelButtonProps","type":"ButtonProps","defaultValue":"{}","description":"-"},{"name":"confirmButtonProps","type":"ButtonProps","defaultValue":"{}","description":"-"},{"name":"escClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"maskClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"true","description":"-"},{"name":"onCancel","type":"() => void","defaultValue":"-","description":"-"},{"name":"onConfirm","type":"() => any","defaultValue":"-","description":"-"},{"name":"afterClose","type":"() => void","defaultValue":"-","description":"-"}]}},"pagination":{"demos":{"demo-1":"import React from \'react\';\\nimport Pagination from \'@components/pagination\';\\n\\nconst Demo = () => <Pagination total={100} />;\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Pagination from \'@components/pagination\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Pagination\\n        style={{ marginRight: 12 }}\\n        disabled={disabled}\\n        total={100}\\n      />\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Pagination from \'@components/pagination\';\\n\\nconst Demo = () => <Pagination total={100} showJumper />;\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Pagination from \'@components/pagination\';\\n\\nconst Demo = () => (\\n  <>\\n    <Pagination\\n      style={{ marginBottom: 12 }}\\n      total={100}\\n      showJumper\\n      showTotal\\n    />\\n    <br />\\n    <Pagination\\n      total={100}\\n      showJumper\\n      showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\\n    />\\n  </>\\n);\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Pagination from \'@components/pagination\';\\n\\nconst Demo = () => <Pagination total={200} showJumper />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"page","type":"number","defaultValue":"-","description":"-"},{"name":"pageSize","type":"number","defaultValue":"-","description":"-"},{"name":"defaultPage","type":"number","defaultValue":"-","description":"-"},{"name":"defaultPageSize","type":"number","defaultValue":"-","description":"-"},{"name":"total","type":"number","defaultValue":"0","description":"-"},{"name":"pageSizeOptions","type":"number[]","defaultValue":"[10, 20, 50, 100]","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"showTotal","type":"boolean | ((total: number, range: number[]) => ReactNode)","defaultValue":"-","description":"-"},{"name":"showJumper","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(page: number, pageSize: number) => void","defaultValue":"-","description":"-"}],"item":[{"name":"index","type":"number","defaultValue":"-","description":"-"},{"name":"page","type":"number","defaultValue":"-","description":"-"},{"name":"pageCount","type":"number","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onPageChange","type":"(nextPage: number) => void","defaultValue":"-","description":"-"}]}},"radio":{"demos":{"demo-1":"import React from \'react\';\\nimport Radio from \'@components/radio\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Radio checked>Cola</Radio>\\n      <Radio>Fanta</Radio>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Radio disabled={disabled} checked>Cola</Radio>\\n      <Radio disabled={disabled}>Fanta</Radio>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst { Group } = Radio;\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Group defaultValue=\\"Cola\\" disabled={disabled}>\\n        <Radio value=\\"Cola\\" key=\\"Cola\\">Cola</Radio>\\n        <Radio value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Radio>\\n        <Radio value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Radio>\\n        <Radio value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Radio>\\n      </Group>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst { Group, Button } = Radio;\\n\\nconst RadioDemo = () => {\\n  const [outlineDisabled, setOutlineDisabled] = useState<boolean>(false);\\n  const [solidDisabled, setSolidDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <p>buttonStyle=\\"outline\\"</p>\\n      <Group defaultValue=\\"Cola\\" disabled={outlineDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={outlineDisabled} onChange={setOutlineDisabled} />\\n      <p>buttonStyle=\\"solid\\"</p>\\n      <Group defaultValue=\\"Cola\\" buttonStyle=\\"solid\\" disabled={solidDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={solidDisabled} onChange={setSolidDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default RadioDemo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onClick","type":"MouseEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"button":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onClick","type":"MouseEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"group":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"string","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: string) => void","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"buttonStyle","type":"outline | solid","defaultValue":"outline","description":"-"}]}},"select":{"demos":{"demo-1":"import React from \'react\';\\nimport Select from \'@components/select\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Select placeholder=\\"Please select\\">\\n      <Option value={0}>Coca-Cola</Option>\\n      <Option value={1} disabled>Pepsi</Option>\\n      <Option value={2}>Sprite</Option>\\n      <Option value={3}>Fanta Orange</Option>\\n    </Select>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Select from \'@components/select\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Select placeholder=\\"Please select\\" multiple>\\n      <Option value={0}>Snow</Option>\\n      <Option value={1} disabled>Pepsi</Option>\\n      <Option value={2}>Corona</Option>\\n      <Option value={3}>Budweiser</Option>\\n      <Option value={4}>Hoegaarden</Option>\\n    </Select>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Select from \'@components/select\';\\nimport Switch from \'@components/switch\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n  const [disabled2, setDisabled2] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Select\\n        style={{ marginRight: 12, marginBottom: 12 }}\\n        placeholder=\\"Please select\\"\\n        disabled={disabled}\\n        defaultValue={0}\\n      >\\n        <Option value={0}>Coca-Cola</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Sprite</Option>\\n        <Option value={3}>Fanta Orange</Option>\\n      </Select>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n      <br />\\n      <Select\\n        style={{ marginRight: 12 }}\\n        placeholder=\\"Please select\\"\\n        disabled={disabled2}\\n        defaultValue={[0, 2]}\\n        multiple\\n      >\\n        <Option value={0}>Snow</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Corona</Option>\\n        <Option value={3}>Budweiser</Option>\\n        <Option value={4}>Hoegaarden</Option>\\n      </Select>\\n      <Switch checked={disabled2} onChange={setDisabled2} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Select from \'@components/select\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Select\\n        style={{ marginRight: 12, marginBottom: 12 }}\\n        placeholder=\\"Please select\\"\\n        defaultValue={0}\\n        clearable\\n      >\\n        <Option value={0}>Coca-Cola</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Sprite</Option>\\n        <Option value={3}>Fanta Orange</Option>\\n      </Select>\\n      <br />\\n      <Select\\n        style={{ marginRight: 12 }}\\n        placeholder=\\"Please select\\"\\n        defaultValue={[0, 2]}\\n        multiple\\n        clearable\\n      >\\n        <Option value={0}>Snow</Option>\\n        <Option value={1} disabled>Pepsi</Option>\\n        <Option value={2}>Corona</Option>\\n        <Option value={3}>Budweiser</Option>\\n        <Option value={4}>Hoegaarden</Option>\\n      </Select>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"open","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultOpen","type":"boolean","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(open: boolean) => void","defaultValue":"-","description":"-"},{"name":"options","type":"OptionProps[]","defaultValue":"[]","description":"-"},{"name":"multiple","type":"boolean","defaultValue":"false","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"clearable","type":"boolean","defaultValue":"-","description":"-"},{"name":"getPopupMountNode","type":"() => HTMLElement","defaultValue":"() => document.body","description":"-"}],"option":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"ValueType","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"}],"selection":[]}},"slider":{"demos":{"demo-1":"import React from \'react\';\\nimport Slider from \'@components/slider\';\\nimport Message from \'@components/message\';\\n\\nconst Demo = () => (\\n  <Slider\\n    defaultValue={0.3}\\n    onChange={value => Message.info({ content: `value changed to ${value}` })}\\n  />\\n);\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Slider from \'@components/slider\';\\nimport Message from \'@components/message\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>{`step={0.05}`}</p>\\n      <Slider\\n        step={0.05}\\n        defaultValue={0.3}\\n        onChange={value => Message.info({ content: `value changed to ${value}` })}\\n      />\\n      <p>{`step={0.1}`}</p>\\n      <Slider\\n        step={0.1}\\n        defaultValue={0.3}\\n        onChange={value => Message.info({ content: `value changed to ${value}` })}\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Slider from \'@components/slider\';\\n\\nconst Demo = () => <Slider defaultValue={0.3} disabled />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"step","type":"number","defaultValue":"-","description":"-"},{"name":"value","type":"number","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"number","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: number) => void","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"}]}},"steps":{"demos":{"demo-1":"import React from \'react\';\\nimport Steps from \'@components/steps\';\\n\\nconst steps = [\\n  {\\n    value: 1,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 2,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 3,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 4,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n];\\n\\nconst Demo = () => <Steps defaultValue={3} steps={steps} />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Steps from \'@components/steps\';\\n\\nconst steps = [\\n  {\\n    value: 1,\\n    title: \'S1\',\\n    description: \'Harry Potter and the Philosopher\\\\\'s Stone.\',\\n  },\\n  {\\n    value: 2,\\n    title: \'S2\',\\n    description: \'Harry Potter and the Chamber of Secrets.\',\\n  },\\n  {\\n    value: 3,\\n    title: \'S3\',\\n    description: \'Harry Potter and the Prisoner of Azkaban.\',\\n  },\\n];\\n\\nconst Demo = () => <Steps defaultValue={3} steps={steps} vertical />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"steps","type":"Step[]","defaultValue":"-","description":"-"},{"name":"value","type":"ValueType","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"ValueType","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: ValueType) => void","defaultValue":"-","description":"-"},{"name":"vertical","type":"boolean","defaultValue":"-","description":"-"}]}},"switch":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [checked, setChecked] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Switch checked={checked} onChange={setChecked} />\\n      <Switch checked={checked} disabled />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Switch />\\n      <Switch defaultChecked />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(false);\\n  const [loadingChecked, setLoadingChecked] = useState<boolean>(false);\\n\\n  const handleLoadingCheckChange = nextChecked => {\\n    setLoading(true);\\n\\n    let timer = setTimeout(() => {\\n      setLoading(false);\\n      setLoadingChecked(nextChecked);\\n\\n      clearTimeout(timer);\\n    }, 1000);\\n  };\\n\\n  return (\\n    <Switch\\n      loading={loading}\\n      checked={loadingChecked}\\n      onChange={handleLoadingCheckChange}\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(checked: boolean) => void","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"-","description":"-"}]}},"table":{"demos":{"demo-1":"import React from \'react\';\\nimport Table, { ColumnType } from \'@components/table\';\\n\\nconst columns: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'Line\',\\n    render: value => `Line ${value}`,\\n  },\\n  {\\n    key: \'starting\',\\n    name: \'Starting\',\\n  },\\n  {\\n    key: \'terminal\',\\n    name: \'Terminal\',\\n  },\\n];\\n\\nconst data = [\\n  {\\n    id: 4,\\n    starting: \'Anheqiao North\',\\n    terminal: \'Tiangongyuan\',\\n  },\\n  {\\n    id: 10,\\n    starting: \'Suzhoujie\',\\n    terminal: \'Huoqiying\',\\n  },\\n  {\\n    id: 13,\\n    starting: \'Xizhimen\',\\n    terminal: \'Dongzhimen\',\\n  },\\n];\\n\\nconst Demo = () => <Table columns={columns} data={data} />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Table, { ColumnType } from \'@components/table\';\\n\\nconst columns: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'No\',\\n    width: 100,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'name\',\\n    name: \'Name\',\\n    width: 160,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'math\',\\n    name: \'Math\',\\n  },\\n  {\\n    key: \'program\',\\n    name: \'Program\',\\n  },\\n  {\\n    key: \'physics\',\\n    name: \'Physics\',\\n  },\\n  {\\n    key: \'psychology\',\\n    name: \'Psychology\',\\n  },\\n  {\\n    key: \'philosophy\',\\n    name: \'Philosophy\',\\n  },\\n  {\\n    key: \'natural\',\\n    name: \'Natural\',\\n  },\\n  {\\n    key: \'music\',\\n    name: \'Music\',\\n  },\\n  {\\n    key: \'total\',\\n    name: \'Total\',\\n    fixed: \'right\',\\n  },\\n];\\n\\nconst data = [\\n  {\\n    id: 1001,\\n    name: \'A\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1002,\\n    name: \'Dan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1003,\\n    name: \'Evan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1004,\\n    name: \'Johnson\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n];\\n\\nconst Demo = () => <Table columns={columns} data={data} contentWidth={2000} />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"data","type":"RowType[]","defaultValue":"-","description":"-"},{"name":"rowKey","type":"string","defaultValue":"-","description":"-"},{"name":"columns","type":"ColumnType[]","defaultValue":"-","description":"-"},{"name":"contentWidth","type":"string | number","defaultValue":"-","description":"-"}]}},"tabs":{"demos":{"demo-1":"import React from \'react\';\\nimport Tabs from \'@components/tabs\';\\n\\nconst { TabPane } = Tabs;\\n\\nconst tabs = [\\n  { label: \'🚊 Line 4\', value: 4, content: \'The center of the universe is here, I heard.\' },\\n  { label: \'🚊 Line 10\', value: 10, content: \'Transfer a subway, transfer a station.\' },\\n  { label: \'🚊 Line 13\', value: 13, content: \'Happy hot pot, happy day and night.\' },\\n];\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Tabs defaultValue={tabs[0].value}>\\n      {tabs.map(item => (\\n        <TabPane key={item.value} label={item.label} value={item.value}>\\n          {item.content}\\n        </TabPane>\\n      ))}\\n    </Tabs>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"tabs","type":"TabPaneProps[]","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"onTabClick","type":"(value: any) => void","defaultValue":"-","description":"-"}]}},"tag":{"demos":{"demo-1":"import React from \'react\';\\nimport Tag from \'@components/tag\';\\n\\nconst tags = [\'React\', \'Vue\', \'Angular\'];\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      {tags.map(tag => <Tag key={tag}>{tag}</Tag>)}\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useEffect } from \'react\';\\nimport Tag from \'@components/tag\';\\nimport Message from \'@components/message\';\\n\\nconst tags = [\'React\', \'Vue\', \'Angular\'];\\n\\nconst Demo = () => {\\n  useEffect(() => Message.destroyAll, []);\\n\\n  return (\\n    <>\\n      {tags.map(tag => (\\n        <Tag\\n          key={tag}\\n          closable\\n          onClose={() => Message.success({ content: \'Tag closed!\' })}\\n        >\\n          {tag}\\n        </Tag>\\n      ))}\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useEffect } from \'react\';\\nimport Tag from \'@components/tag\';\\nimport Icon from \'@components/icon\';\\nimport Message from \'@components/message\';\\n\\nconst Demo = () => {\\n  const handleClose = () => Message.success({ content: \'Tag closed!\' });\\n\\n  useEffect(() => Message.destroyAll, []);\\n\\n  return (\\n    <>\\n      <Tag closable onClose={handleClose}>\\n        <Icon type=\\"copy\\" />\\n        React\\n      </Tag>\\n      <Tag closable onClose={handleClose}>\\n        <Icon type=\\"exchange\\" />\\n        Vue\\n      </Tag>\\n      <Tag>\\n        <Icon type=\\"check\\" />\\n        Angular\\n      </Tag>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Tag from \'@components/tag\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Tag closable disabled>\\n        <Icon type=\\"copy\\" />\\n        React\\n      </Tag>\\n      <Tag closable disabled>\\n        <Icon type=\\"exchange\\" />\\n        Vue\\n      </Tag>\\n      <Tag disabled>\\n        <Icon type=\\"check\\" />\\n        Angular\\n      </Tag>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"closable","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onClose","type":"(event: MouseEvent<Element, MouseEvent>) => void","defaultValue":"-","description":"-"}]}},"tooltip":{"demos":{"demo-1":"import React from \'react\';\\nimport Tooltip from \'@components/tooltip\';\\n\\nconst Demo = () => (\\n  <Tooltip content=\\"Tooltip content.\\">\\n    <span style={{ display: \'inline-block\' }}>\\n      Hover me\\n    </span>\\n  </Tooltip>\\n);\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"popupClassName","type":"string","defaultValue":"-","description":"-"},{"name":"content","type":"ReactChild","defaultValue":"-","description":"-"}]}},"transition":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Transition from \'@components/transition\';\\nimport \'./demo-1.less\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(true);\\n\\n  return (\\n    <div className=\\"transition-demo-1\\">\\n      <Button onClick={() => setVisible(!visible)}>\\n        Toggle\\n      </Button>\\n      <Transition\\n        visible={visible}\\n        timeout={300}\\n        beforeEnter=\\"before-enter\\"\\n        entering=\\"entering\\"\\n        entered=\\"entered\\"\\n        leaving=\\"leaving\\"\\n      >\\n        <div className=\\"box\\" />\\n      </Transition>\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"-","description":"-"},{"name":"timeout","type":"number","defaultValue":"300","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"false","description":"-"},{"name":"beforeEnter","type":"string","defaultValue":"-","description":"-"},{"name":"entering","type":"string","defaultValue":"-","description":"-"},{"name":"entered","type":"string","defaultValue":"-","description":"-"},{"name":"leaving","type":"string","defaultValue":"-","description":"-"},{"name":"afterLeave","type":"() => void","defaultValue":"-","description":"-"}]}},"tree":{"demos":{"demo-1":"import React from \'react\';\\nimport Tree from \'@components/tree\';\\n\\nconst data = [\\n  {\\n    title: \'1\',\\n    value: \'1\',\\n    children: [\\n      {\\n        title: \'1-1\',\\n        value: \'1-1\',\\n        children: [\\n          {\\n            title: \'1-1-1\',\\n            value: \'1-1-1\',\\n            children: [\\n              {\\n                title: \'1-1-1-1\',\\n                value: \'1-1-1-1\',\\n                children: [],\\n              },\\n              {\\n                title: \'1-1-1-2\',\\n                value: \'1-1-1-2\',\\n                children: [],\\n              },\\n            ],\\n          },\\n          {\\n            title: \'1-1-2\',\\n            value: \'1-1-2\',\\n            children: [],\\n          },\\n        ],\\n      },\\n      {\\n        title: \'1-2\',\\n        value: \'1-2\',\\n        children: [\\n          {\\n            title: \'1-2-1\',\\n            value: \'1-2-1\',\\n            children: [],\\n          },\\n        ],\\n      },\\n    ],\\n  },\\n  {\\n    title: \'2\',\\n    value: \'2\',\\n    children: [\\n      {\\n        title: \'2-1\',\\n        value: \'2-1\',\\n        children: [],\\n      },\\n    ],\\n  },\\n];\\n\\nconst Demo = () => <Tree data={data} />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"data","type":"NodeType[]","defaultValue":"-","description":"-"},{"name":"expandedValues","type":"ValueType[]","defaultValue":"-","description":"-"},{"name":"defaultExpandedValues","type":"ValueType[]","defaultValue":"-","description":"-"},{"name":"onExpandedChange","type":"(expandedValues: ValueType[]) => void","defaultValue":"-","description":"-"}],"node":[{"name":"node","type":"NodeType","defaultValue":"-","description":"-"},{"name":"floorIndex","type":"number","defaultValue":"-","description":"-"},{"name":"expandedValues","type":"ValueType[]","defaultValue":"-","description":"-"},{"name":"onExpandedToggle","type":"(nodeValue: ValueType) => void","defaultValue":"-","description":"-"}]}},"trigger":{"demos":{"demo-1":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Trigger from \'@components/trigger\';\\n\\nconst popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Trigger popup={popup}>\\n      <Button>Click me</Button>\\n    </Trigger>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Trigger from \'@components/trigger\';\\n\\nconst popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Trigger popup={popup}>\\n        <Button>Click me</Button>\\n      </Trigger>\\n      <Trigger popup={popup} trigger=\\"hover\\">\\n        <Button>Hover me</Button>\\n      </Trigger>\\n      <Trigger popup={popup} trigger={[\'click\', \'hover\']}>\\n        <Button>Click or hover me</Button>\\n      </Trigger>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Trigger from \'@components/trigger\';\\nimport \'./demo-3.less\';\\n\\nconst popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst TriggerWithDefaultProps = props => <Trigger popup={popup} showArrow {...props} />;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <div className=\\"trigger-demo-3\\">\\n      <div className=\\"top\\">\\n        <TriggerWithDefaultProps placement=\\"topLeft\\">\\n          <Button>Top left</Button>\\n        </TriggerWithDefaultProps>\\n        <TriggerWithDefaultProps placement=\\"top\\">\\n          <Button>Top</Button>\\n        </TriggerWithDefaultProps>\\n        <TriggerWithDefaultProps placement=\\"topRight\\">\\n          <Button>Top right</Button>\\n        </TriggerWithDefaultProps>\\n      </div>\\n      <div className=\\"center\\">\\n        <div className=\\"left\\">\\n          <TriggerWithDefaultProps placement=\\"leftTop\\">\\n            <Button>Left top</Button>\\n          </TriggerWithDefaultProps>\\n          <TriggerWithDefaultProps placement=\\"left\\">\\n            <Button>Left</Button>\\n          </TriggerWithDefaultProps>\\n          <TriggerWithDefaultProps placement=\\"leftBottom\\">\\n            <Button>Left bottom</Button>\\n          </TriggerWithDefaultProps>\\n        </div>\\n        <div className=\\"right\\">\\n          <TriggerWithDefaultProps placement=\\"rightTop\\">\\n            <Button>Right top</Button>\\n          </TriggerWithDefaultProps>\\n          <TriggerWithDefaultProps placement=\\"right\\">\\n            <Button>Right</Button>\\n          </TriggerWithDefaultProps>\\n          <TriggerWithDefaultProps placement=\\"rightBottom\\">\\n            <Button>Right bottom</Button>\\n          </TriggerWithDefaultProps>\\n        </div>\\n      </div>\\n      <div className=\\"bottom\\">\\n        <TriggerWithDefaultProps placement=\\"bottomLeft\\">\\n          <Button>Bottom left</Button>\\n        </TriggerWithDefaultProps>\\n        <TriggerWithDefaultProps placement=\\"bottom\\">\\n          <Button>Bottom</Button>\\n        </TriggerWithDefaultProps>\\n        <TriggerWithDefaultProps placement=\\"bottomRight\\">\\n          <Button>Bottom right</Button>\\n        </TriggerWithDefaultProps>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\nimport Trigger from \'@components/trigger\';\\nimport Input from \'@components/input\';\\n\\nconst popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst { TextArea } = Input;\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <div style={{ display: \'flex\', alignItems: \'center\' }}>\\n      <Trigger popup={popup} visible={visible}>\\n        <TextArea\\n          style={{ width: 320, marginRight: 12 }}\\n          defaultValue=\\"Resize textarea to update popup position\\"\\n        />\\n      </Trigger>\\n      <Switch checked={visible} onChange={setVisible} />\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React, { useRef } from \'react\';\\nimport Button from \'@components/button\';\\nimport Trigger from \'@components/trigger\';\\n\\nconst popup = (\\n  <div style={{ padding: \'4px 0\' }}>\\n    {new Array(3).fill(1).map((_, index) => (\\n      <div style={{ padding: \'4px 16px\', fontSize: 14, lineHeight: \'22px\' }} key={index}>\\n        Popup content injected\\n      </div>\\n    ))}\\n  </div>\\n);\\n\\nconst Demo = () => {\\n  const scrollRef = useRef<HTMLDivElement>(null);\\n\\n  return (\\n    <div\\n      ref={scrollRef}\\n      style={{\\n        position: \'relative\',\\n        height: 300,\\n        border: \'1px solid var(--fog-border-color)\',\\n        overflow: \'auto\',\\n      }}\\n    >\\n      <div style={{ padding: 50, width: \'150%\', height: 500 }}>\\n        <Trigger\\n          popup={popup}\\n          getPopupMountNode={() => scrollRef.current}\\n        >\\n          <Button>Click me</Button>\\n        </Trigger>\\n        <Trigger\\n          popup={popup}\\n          trigger=\\"hover\\"\\n          getPopupMountNode={() => scrollRef.current}\\n        >\\n          <Button style={{ position: \'absolute\', top: 100, left: 200 }}>\\n            Hover me\\n          </Button>\\n        </Trigger>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultVisible","type":"boolean","defaultValue":"-","description":"-"},{"name":"onVisibleChange","type":"(visible: boolean) => void","defaultValue":"-","description":"-"},{"name":"trigger","type":"TriggerTypes","defaultValue":"click","description":"-"},{"name":"popup","type":"ReactElement<any, string | JSXElementConstructor<any>>","defaultValue":"-","description":"-"},{"name":"popupClassName","type":"string","defaultValue":"-","description":"-"},{"name":"popupTransitionProps","type":"TransitionProps","defaultValue":"{}","description":"-"},{"name":"popupMinWidthFromTrigger","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"placement","type":"topLeft | top | topRight | leftTop | left | leftBottom | rightTop | right | rightBottom | bottomLeft | bottom | bottomRight","defaultValue":"bottomLeft","description":"-"},{"name":"showArrow","type":"boolean","defaultValue":"-","description":"-"},{"name":"getPopupMountNode","type":"() => HTMLElement","defaultValue":"() => document.body","description":"-"}]}}},"c":[{"key":"name","name":"Property"},{"key":"type","name":"Type"},{"key":"defaultValue","name":"Default"},{"key":"description","name":"Description"}]}')}}]);