"use strict";(self.webpackChunkfog_design=self.webpackChunkfog_design||[]).push([[21],{7618:(e,n,t)=>{t.d(n,{Z:()=>A});var o=t(7294),a=t(3935),i=t(4184),r=t.n(i),l=t(9074),s=t(2205),c=t(9940),u=t(3477),d=t(3379),p=t.n(d),m=t(7795),f=t.n(m),b=t(569),y=t.n(b),g=t(3565),h=t.n(g),v=t(9216),k=t.n(v),x=t(4589),C=t.n(x),V=t(9968),D={};D.styleTagTransform=C(),D.setAttributes=h(),D.insert=y().bind(null,"head"),D.domAPI=f(),D.insertStyleElement=k();p()(V.Z,D);V.Z&&V.Z.locals&&V.Z.locals;var w=["visible","duration"];function B(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function S(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?B(Object(t),!0).forEach((function(n){R(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):B(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function R(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function O(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var P=l.O,T=function(){return o.createElement(c.Z,{type:"info-circle-fill",color:"var(--fog-primary-color)"})},I=function(){return o.createElement(c.Z,{type:"close-circle-fill",color:"var(--fog-danger-color)"})},E=function(){return o.createElement(c.Z,{type:"sigh-circle-fill",color:"var(--fog-warning-color)"})},M=function(){return o.createElement(c.Z,{type:"success-circle-fill",color:"var(--fog-success-color)"})},_=function(e){var n=e.className,t=e.icon,a=e.content;return o.createElement("div",{className:r()("".concat(P,"-message"),n)},t&&o.createElement("div",{className:"".concat(P,"-message__icon")},t),o.createElement("div",{className:"".concat(P,"-message__content")},a))};_.defaultProps={icon:o.createElement(T,null)};var L=[],N=document.createElement("div");N.style.position="fixed",N.style.top="0px",N.style.left="0px",N.style.right="0px",N.style.zIndex="10",N.style.pointerEvents="none",document.body.appendChild(N),_.info=function(e){var n,t=document.createElement("div");t.style.textAlign="center",N.appendChild(t);var i=function(e){var i=e.visible,l=void 0===i||i,c=e.duration,d=void 0===c?3e3:c,p=O(e,w);l?0!==d&&(n=(0,u.cX)(r,d)):(0,u.lo)(n),a.render(o.createElement(s.Z,{visible:l,beforeEnter:"".concat(P,"-message--before-enter"),entering:"".concat(P,"-message--entering"),entered:"".concat(P,"-message--entered"),leaving:"".concat(P,"-message--leaving"),onLeft:function(){a.unmountComponentAtNode(t),N.contains(t)&&N.removeChild(t)}},o.createElement(_,p)),t)},r=function(){i(S(S({},e),{},{visible:!1})),L=L.filter((function(e){return e!==l}))};i(e);var l={destroy:r};return L.push(l),l},_.error=function(e){return _.info(S({icon:o.createElement(I,null)},e))},_.warning=function(e){return _.info(S({icon:o.createElement(E,null)},e))},_.success=function(e){return _.info(S({icon:o.createElement(M,null)},e))},_.destroyAll=function(){for(;L.length;){L.pop().destroy()}};const A=_},9960:(e,n,t)=>{t.d(n,{Z:()=>P});var o=t(7294),a=t(4184),i=t.n(a),r=t(9074);const l=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return(0,o.useMemo)((function(){return Array.isArray(e)?e:n}),[e,n])};var s=t(3477),c=t(3379),u=t.n(c),d=t(7795),p=t.n(d),m=t(569),f=t.n(m),b=t(3565),y=t.n(b),g=t(9216),h=t.n(g),v=t(4589),k=t.n(v),x=t(6417),C={};C.styleTagTransform=k(),C.setAttributes=y(),C.insert=f().bind(null,"head"),C.domAPI=p(),C.insertStyleElement=h();u()(x.Z,C);x.Z&&x.Z.locals&&x.Z.locals;function V(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function D(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?V(Object(t),!0).forEach((function(n){w(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):V(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function w(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function B(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==t)return;var o,a,i=[],r=!0,l=!1;try{for(t=t.call(e);!(r=(o=t.next()).done)&&(i.push(o.value),!n||i.length!==n);r=!0);}catch(e){l=!0,a=e}finally{try{r||null==t.return||t.return()}finally{if(l)throw a}}return i}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return S(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return S(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}var R=r.O,O=function(e){var n,t=e.className,a=e.rowKey,r=e.contentWidth,c=e.data,u=e.columns,d=(0,o.useRef)(null),p=B((0,o.useState)({}),2),m=p[0],f=p[1],b=B((0,o.useState)(!1),2),y=b[0],g=b[1],h=B((0,o.useState)(!1),2),v=h[0],k=h[1],x=(0,o.useMemo)((function(){return Array.isArray(u)?u.map((function(e){return D(D({},e),{},{fixed:(n=e.fixed,["left","right"].includes(n)?e.fixed:void 0)});var n})):[]}),[u]),C=l(c),V=(0,o.useMemo)((function(){return x.reduce((function(e,n){return D(D({},e),{},w({},n.key,o.createRef()))}),{})}),[x]),S=(0,o.useMemo)((function(){return x.filter((function(e){return"left"===e.fixed})).map((function(e){return e.key}))}),[x]),O=(0,o.useMemo)((function(){return x.filter((function(e){return"right"===e.fixed})).map((function(e){return e.key}))}),[x]),P=function(e){return S.length&&S[S.length-1]===e},T=function(e){return O.length&&O[0]===e},I=function(){if(d.current){var e=d.current,n=e.scrollLeft,t=e.scrollWidth,o=e.clientWidth;g(0===n),k(n+o===t)}},E=function(){var e={},n=0,t=0;S.forEach((function(t){V[t].current&&(e[t]={left:n},n+=V[t].current.offsetWidth)})),O.reverse().forEach((function(n){V[n].current&&(e[n]={right:t},t+=V[n].current.offsetWidth)})),f(e),I()};return(0,o.useLayoutEffect)((function(){if(ResizeObserver){var e=[];return Object.keys(V).forEach((function(n){var t=new ResizeObserver(E);t.observe(V[n].current),e.push(t)})),function(){return e.forEach((function(e){return e.disconnect()}))}}}),[V]),(0,o.useLayoutEffect)((function(){if(d.current)return d.current.addEventListener("scroll",I),function(){return d.current.removeEventListener("scroll",I)}}),[]),o.createElement("div",{className:i()(t,(n={},w(n,"".concat(R,"-table"),!0),w(n,"".concat(R,"-table--scroll-left-end"),y),w(n,"".concat(R,"-table--scroll-right-end"),v),n))},o.createElement("div",{className:"".concat(R,"-table__content"),ref:d},o.createElement("table",{width:r},o.createElement("thead",{className:"".concat(R,"-table__thead")},o.createElement("tr",{className:"".concat(R,"-table__tr")},x.map((function(e){var n,t=e.key,a=e.fixed;return o.createElement("th",{className:i()((n={},w(n,"".concat(R,"-table__cell"),!0),w(n,"".concat(R,"-table__cell--fixed"),a),w(n,"".concat(R,"-table__cell--fixed-last"),P(t)),w(n,"".concat(R,"-table__cell--fixed-first"),T(t)),n)),key:t,ref:V[t],style:m[t]||{}},e.name)})))),o.createElement("tbody",{className:"".concat(R,"-table__tbody")},C.map((function(e,n){return o.createElement("tr",{className:"".concat(R,"-table__tr"),key:a||n},x.map((function(t){var a,r=t.key,l=t.width,c=t.fixed,u=t.render;return o.createElement("td",{className:i()((a={},w(a,"".concat(R,"-table__cell"),!0),w(a,"".concat(R,"-table__cell--fixed"),c),w(a,"".concat(R,"-table__cell--fixed-last"),P(r)),w(a,"".concat(R,"-table__cell--fixed-first"),T(r)),a)),key:r,width:l,style:m[r]||{}},(0,s.mf)(u)?u(e[r],e,n):e[r])})))}))))))};O.defaultProps={};const P=O},9968:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(8081),a=t.n(o),i=t(3645),r=t.n(i)()(a());r.push([e.id,".fog-message {\n  display: inline-block;\n  padding: 10px 16px;\n  font-size: 0;\n  line-height: 22px;\n  box-shadow: 0 0 8px var(--fog-shadow-color);\n  border-radius: 2px;\n  background-color: var(--fog-panel-color);\n  margin-top: 16px;\n  transition: all 0.3s;\n  transform-origin: 50% 0;\n  pointer-events: all;\n}\n.fog-message,\n.fog-message *,\n.fog-message *:before,\n.fog-message *:after {\n  box-sizing: border-box;\n}\n.fog-message--before-enter {\n  opacity: 0;\n  transform: scaleY(0);\n}\n.fog-message--entering {\n  opacity: 1;\n  transform: scaleY(1);\n}\n.fog-message--entered {\n  opacity: 1;\n  transform: scaleY(1);\n}\n.fog-message--leaving {\n  opacity: 0;\n  transform: scaleY(0);\n}\n.fog-message__icon {\n  margin-right: 8px;\n}\n.fog-message__icon,\n.fog-message__content {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: 14px;\n}\n.fog-message .fog-icon {\n  display: block;\n  font-size: 16px;\n}\n",""]);const l=r},6417:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(8081),a=t.n(o),i=t(3645),r=t.n(i)()(a());r.push([e.id,".fog-table {\n  border: 1px solid var(--fog-border-color);\n  border-radius: 2px;\n  overflow: hidden;\n}\n.fog-table,\n.fog-table *,\n.fog-table *:before,\n.fog-table *:after {\n  box-sizing: border-box;\n}\n.fog-table__content {\n  overflow: auto hidden;\n}\n.fog-table table {\n  min-width: 100%;\n  border-spacing: 0;\n  border-collapse: separate;\n}\n.fog-table__cell {\n  position: relative;\n  padding: 10px 16px;\n  color: var(--fog-color);\n  font-size: 14px;\n  text-align: left;\n  line-height: 22px;\n  border-right: 1px solid var(--fog-border-color);\n  border-bottom: 1px solid var(--fog-border-color);\n  background-color: var(--fog-background-color);\n}\n.fog-table__cell--fixed {\n  position: sticky;\n  z-index: 2;\n}\n.fog-table__cell--fixed-last::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: -1px;\n  bottom: -1px;\n  width: 30px;\n  transform: translateX(100%);\n  box-shadow: inset 10px 0 8px -8px var(--fog-border-color);\n  transition: box-shadow 0.3s;\n  pointer-events: none;\n}\n.fog-table--scroll-left-end .fog-table__cell--fixed-last::after {\n  box-shadow: none;\n}\n.fog-table__cell--fixed-first::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: -1px;\n  width: 30px;\n  transform: translateX(-100%);\n  box-shadow: inset -10px 0 8px -8px var(--fog-border-color);\n  border-right: 1px solid var(--fog-border-color);\n  transition: box-shadow 0.3s;\n  pointer-events: none;\n}\n.fog-table--scroll-right-end .fog-table__cell--fixed-first::after {\n  box-shadow: none;\n  border-right-color: var(--fog-transparent);\n}\n.fog-table__cell:last-child {\n  border-right: none;\n}\n.fog-table__tbody .fog-table__tr:last-child .fog-table__cell {\n  border-bottom: none;\n}\n",""]);const l=r},7368:e=>{e.exports=JSON.parse('{"w":{"button":{"demos":{"demo-1":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\">\\n        Primary\\n      </Button>\\n      <Button>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\">\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\">\\n        <Icon type=\\"calendar\\" />\\n        Date\\n      </Button>\\n      <Button>\\n        <Icon type=\\"email\\" />\\n        Send\\n      </Button>\\n      <Button type=\\"dashed\\">\\n        Trigger\\n        <Icon type=\\"down\\" />\\n      </Button>\\n      <Button type=\\"link\\">\\n        <Icon type=\\"link\\" />\\n        Link\\n      </Button>\\n      <Button type=\\"text\\">\\n        <Icon type=\\"edit\\" />\\n        Edit\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" loading>\\n        Loading\\n      </Button>\\n      <Button\\n        loading={loading}\\n        onClick={() => {\\n          setLoading(true);\\n\\n          setTimeout(() => setLoading(false), 1000);\\n        }}\\n      >\\n        <Icon type=\\"email\\" />\\n        Click me\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" disabled>\\n        Primary\\n      </Button>\\n      <Button disabled>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" disabled>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" disabled>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" disabled>\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button type=\\"primary\\" danger>\\n        Primary\\n      </Button>\\n      <Button danger>\\n        Default\\n      </Button>\\n      <Button type=\\"dashed\\" danger>\\n        Dashed\\n      </Button>\\n      <Button type=\\"link\\" danger>\\n        Link\\n      </Button>\\n      <Button type=\\"text\\" danger>\\n        Text\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"type","type":"primary | dashed | link | text","defaultValue":"-","description":"-"},{"name":"danger","type":"boolean","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"}]}},"checkbox":{"demos":{"demo-1":"import React from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\n\\nconst Demo = () => <Checkbox defaultChecked>Cola</Checkbox>;\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Checkbox defaultChecked disabled={disabled}>Cola</Checkbox>\\n      <Checkbox disabled={disabled}>Fanta</Checkbox>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport Switch from \'@components/switch\';\\nimport \'./index.less\';\\n\\nconst { Group } = Checkbox;\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Group defaultValue={[\'Cola\']} disabled={disabled}>\\n        <Checkbox value=\\"Cola\\" key=\\"Cola\\">Cola</Checkbox>\\n        <Checkbox value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Checkbox>\\n        <Checkbox value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Checkbox>\\n        <Checkbox value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Checkbox>\\n      </Group>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Checkbox from \'@components/checkbox\';\\nimport \'./index.less\';\\n\\nconst { Group } = Checkbox;\\n\\nconst checkboxes = [\'Cola\', \'Pepsi\', \'Fanta\', \'Sprite\'];\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState(checkboxes.filter(item => item !== \'Pepsi\'));\\n\\n  return (\\n    <>\\n      <Checkbox\\n        style={{ display: \'block\', marginBottom: 12 }}\\n        indeterminate={value.length && value.length < checkboxes.length}\\n        checked={value.length === checkboxes.length}\\n        onChange={event => setValue(event.target.checked ? checkboxes : [])}\\n      >\\n        Check all\\n      </Checkbox>\\n      <Group value={value} onChange={setValue}>\\n        {checkboxes.map(item => (\\n          <Checkbox value={item} key={item}>{item}</Checkbox>\\n        ))}\\n      </Group>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"indeterminate","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"ChangeEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"group":[{"name":"className","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"string[]","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"string[]","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: string[]) => void","defaultValue":"-","description":"-"}]}},"date-picker":{"demos":{"demo-1":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst Demo = () => <DatePicker placeholder=\\"Please select\\" />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst Demo = () => <DatePicker placeholder=\\"Please select\\" disabled />;\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <DatePicker\\n      placeholder=\\"Please select\\"\\n      disabledDate={value => (\\n        new Date(value).getDate() >= 20 ||\\n        new Date(value).getDate() === 12\\n      )}\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport DatePicker from \'@components/date-picker\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <p>mode=\\"month\\"</p>\\n      <DatePicker placeholder=\\"Please select\\" mode=\\"month\\" />\\n      <p>mode=\\"year\\"</p>\\n      <DatePicker placeholder=\\"Please select\\" mode=\\"year\\" />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"className","type":"string","defaultValue":"-","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"number","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"number","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: number) => void","defaultValue":"-","description":"-"},{"name":"open","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultOpen","type":"boolean","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(open: boolean) => void","defaultValue":"-","description":"-"},{"name":"format","type":"string","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabledDate","type":"(value: number) => boolean","defaultValue":"-","description":"-"},{"name":"mode","type":"date | month | year","defaultValue":"date","description":"-"},{"name":"renderFooter","type":"() => ReactElement<any, string | JSXElementConstructor<any>>","defaultValue":"-","description":"-"}],"date-panel":[],"month-panel":[],"panel-cell":[],"year-panel":[]}},"drawer":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Drawer from \'@components/drawer\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button onClick={() => setVisible(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visible}\\n        onClose={() => setVisible(false)}\\n      >\\n        Drawer Content\\n      </Drawer>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Drawer from \'@components/drawer\';\\nimport Button from \'@components/button\';\\nimport Radio from \'@components/radio\';\\nimport { kebabCaseToPascalCase } from \'@utils/index\';\\nimport \'./index.less\';\\n\\nconst placements = [\'top\', \'right\', \'bottom\', \'left\'];\\n\\nconst DrawerContent = () => {\\n  const [count, setCount] = useState<number>(0);\\n\\n  return (\\n    <div className=\\"drawer-content\\">\\n      <p>Clicked {count} times, state preserved.</p>\\n      <Button onClick={() => setCount(count + 1)}>\\n        Click me\\n      </Button>\\n    </div>\\n  );\\n};\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n  const [placement, setPlacement] = useState<string>(placements[1]);\\n\\n  return (\\n    <>\\n      <Radio.Group\\n        style={{ marginRight: 12 }}\\n        value={placement}\\n        onChange={event => setPlacement(event.target.value)}\\n      >\\n        {placements.map(item => (\\n          <Radio value={item} key={item}>\\n            {kebabCaseToPascalCase(item)}\\n          </Radio>\\n        ))}\\n      </Radio.Group>\\n      <Button onClick={() => setVisible(true)}>\\n        Open\\n      </Button>\\n      <Drawer\\n        title=\\"Basic Usage\\"\\n        visible={visible}\\n        placement={placement}\\n        onClose={() => setVisible(false)}\\n      >\\n        <DrawerContent />\\n      </Drawer>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"false","description":"-"},{"name":"width","type":"string | number","defaultValue":"300","description":"-"},{"name":"height","type":"string | number","defaultValue":"300","description":"-"},{"name":"title","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"placement","type":"string","defaultValue":"right","description":"-"},{"name":"showClose","type":"boolean","defaultValue":"true","description":"-"},{"name":"escClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"maskClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"false","description":"-"},{"name":"onClose","type":"() => void","defaultValue":"-","description":"-"},{"name":"afterClose","type":"() => void","defaultValue":"-","description":"-"}]}},"icon":{"demos":{},"apiRows":{"default":[{"name":"type","type":"up | down | left | right | double-up | double-down | double-left | double-right | close | check | search | edit | calendar | email | link | code | copy | more | loading | loading-3/4 | close-circle-fill | success-circle-fill | info-circle-fill | sigh-circle-fill | doubt-circle-fill | github-circle-fill","defaultValue":"-","description":"-"},{"name":"size","type":"string | number","defaultValue":"-","description":"-"},{"name":"color","type":"string","defaultValue":"-","description":"-"}]}},"input":{"demos":{"demo-1":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => <Input placeholder=\\"Please input\\" />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Input\\n      placeholder=\\"Please input\\"\\n      defaultValue=\\"Your emotion\\"\\n      clearable\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix={<Icon type=\\"email\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        prefix=\\"https://\\"\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React from \'react\';\\nimport Input from \'@components/input\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix={<Icon type=\\"edit\\" />}\\n      />\\n      <Input\\n        placeholder=\\"Please input\\"\\n        suffix=\\"@163.com\\"\\n      />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => <Input placeholder=\\"Please input\\" disabled />;\\n\\nexport default Demo;\\n","demo-6":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => <Input placeholder=\\"Please Input\\" readOnly />;\\n\\nexport default Demo;\\n","demo-7":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Input\\n      placeholder=\\"Please Input\\"\\n      type=\\"password\\"\\n      defaultValue=\\"12345678\\"\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n","demo-8":"import React from \'react\';\\nimport Input from \'@components/input\';\\n\\nconst { TextArea } = Input;\\n\\nconst Demo = () => <TextArea placeholder=\\"Please Input\\" />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"readOnly","type":"boolean","defaultValue":"-","description":"-"},{"name":"prefix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"suffix","type":"ReactNode","defaultValue":"-","description":"-"},{"name":"clearable","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(event: ChangeEvent<HTMLInputElement>) => void","defaultValue":"-","description":"-"}],"textarea":[],"wrapper":[]}},"loading":{"demos":{"demo-1":"import React from \'react\';\\nimport Loading from \'@components/loading\';\\n\\nconst Demo = () => <Loading />;\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n        tip=\\"Loading...\\"\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Loading from \'@components/loading\';\\nimport Switch from \'@components/switch\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(true);\\n\\n  return (\\n    <>\\n      <Loading\\n        wrapperClassName=\\"loading-container\\"\\n        loading={loading}\\n        icon={<Icon type=\\"loading-3/4\\" />}\\n      >\\n        <div className=\\"loading-content\\">\\n          <div className=\\"date\\">2022-03-01</div>\\n          <div>Dancing by the sea till night falls.</div>\\n        </div>\\n      </Loading>\\n      <Switch checked={loading} onChange={setLoading} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"className","type":"string","defaultValue":"-","description":"-"},{"name":"wrapperClassName","type":"string","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"true","description":"-"},{"name":"icon","type":"ReactElement<any, string | JSXElementConstructor<any>>","defaultValue":"<Icon type=\\"loading\\" />","description":"-"},{"name":"tip","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"tipBackground","type":"boolean","defaultValue":"true","description":"-"}]}},"menu":{"demos":{"demo-1":"import React from \'react\';\\nimport Menu from \'@components/menu\';\\n\\nconst { SubMenu, ItemGroup, Item } = Menu;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Menu\\n      defaultOpens={[\'Navigation 1\', \'Navigation 2\', \'SubMenu\']}\\n      defaultValue=\\"Option 1\\"\\n    >\\n      <SubMenu label=\\"Navigation 1\\" key=\\"Navigation 1\\">\\n        <ItemGroup label=\\"Group-1\\" key=\\"Group-1\\">\\n          <Item label=\\"Option 1\\" key=\\"Option 1\\" />\\n          <Item label=\\"Option 2\\" key=\\"Option 2\\" />\\n        </ItemGroup>\\n        <ItemGroup label=\\"Group-2\\" key=\\"Group-2\\">\\n          <Item label=\\"Option 3\\" key=\\"Option 3\\" />\\n          <Item label=\\"Option 4\\" key=\\"Option 4\\" />\\n        </ItemGroup>\\n      </SubMenu>\\n      <SubMenu label=\\"Navigation 2\\" key=\\"Navigation 2\\">\\n        <Item label=\\"Option 5\\" key=\\"Option 5\\" />\\n        <Item label=\\"Option 6\\" key=\\"Option 6\\" />\\n        <SubMenu label=\\"SubMenu\\" key=\\"SubMenu\\">\\n          <Item label=\\"Option 7\\" key=\\"Option 7\\" />\\n          <Item label=\\"Option 8\\" key=\\"Option 8\\" />\\n        </SubMenu>\\n      </SubMenu>\\n      <Item label=\\"Option 9\\" key=\\"Option 9\\" />\\n      <Item label=\\"Option 10\\" key=\\"Option 10\\" />\\n    </Menu>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"opens","type":"any[]","defaultValue":"-","description":"-"},{"name":"defaultOpens","type":"any[]","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(opens: any[]) => void","defaultValue":"-","description":"-"}],"menu-item":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}],"menu-item-group":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}],"submenu":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"any","defaultValue":"-","description":"-"}]}},"message":{"demos":{"demo-1":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Button onClick={() => Message.info({ content: \'Basic usage\' })}>\\n      Click me\\n    </Button>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button onClick={() => Message.info({ content: \'Subscribe the news\' })}>\\n        Info\\n      </Button>\\n      <Button onClick={() => Message.error({ content: \'Login required\' })}>\\n        Error\\n      </Button>\\n      <Button onClick={() => Message.warning({ content: \'Remember password\' })}>\\n        Warning\\n      </Button>\\n      <Button onClick={() => Message.success({ content: \'Login success\' })}>\\n        Success\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\nimport Icon from \'@components/icon\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => Message.error({\\n          icon: <Icon type=\\"doubt-circle-fill\\" color=\\"var(--fog-danger-color)\\" />,\\n          content: \'Are you sure?\',\\n        })}\\n      >\\n        Doubt\\n      </Button>\\n      <Button\\n        onClick={() => Message.info({\\n          icon: null,\\n          content: \'Just no icon\',\\n        })}\\n      >\\n        No icon\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useEffect, useRef } from \'react\';\\nimport Message, { MessageReference } from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n  const manualRef = useRef<MessageReference>(null);\\n\\n  useEffect(() => {\\n    return () => {\\n      if (manualRef.current) {\\n        manualRef.current.destroy();\\n        manualRef.current = null;\\n      }\\n    };\\n  }, []);\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          if (!manualRef.current) {\\n            manualRef.current = Message.info({\\n              content: \'The waves lapping the shore endlessly\',\\n              duration: 0,\\n            });\\n          }\\n        }}\\n      >\\n        Open\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          if (manualRef.current) {\\n            manualRef.current.destroy();\\n            manualRef.current = null;\\n          }\\n        }}\\n      >\\n        Close\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-5":"import React from \'react\';\\nimport Message from \'@components/message\';\\nimport Button from \'@components/button\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => Message.info({\\n          content: \'The signal disappears into the night\',\\n        })}\\n      >\\n        Click me\\n      </Button>\\n      <Button onClick={() => Message.destroyAll()}>\\n        DestroyAll\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"icon","type":"ReactNode","defaultValue":"<InfoIcon />","description":"-"},{"name":"content","type":"ReactChild","defaultValue":"-","description":"-"}]}},"modal":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Button onClick={() => setVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Modal\\n        title=\\"Title\\"\\n        visible={visible}\\n        onCancel={() => setVisible(false)}\\n        onConfirm={() => setVisible(false)}\\n      >\\n        Basic usage.\\n      </Modal>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Hi\',\\n            content: \'Beach, waves, and night.\',\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          const modal = Modal.confirm({\\n            title: \'Hi\',\\n            content: (\\n              <>\\n                <span style={{ marginRight: 12 }}>\\n                  Beach, waves, and night.\\n                </span>\\n                <Button\\n                  onClick={() => {\\n                    modal.update({\\n                      content: (\\n                        <span style={{ lineHeight: \'32px\' }}>\\n                          Catch the moment.\\n                        </span>\\n                      ),\\n                    });\\n                  }}\\n                >\\n                  Update\\n                </Button>\\n              </>\\n            ),\\n          });\\n        }}\\n      >\\n        Update reference\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          for (let i = 0; i < 3 ; i++) {\\n            setTimeout(() => {\\n              Modal.confirm({\\n                title: \'Hi\',\\n                content: (\\n                  <Button onClick={Modal.destroyAll}>\\n                    Destroy all\\n                  </Button>\\n                ),\\n              });\\n            }, i * 300);\\n          }\\n        }}\\n      >\\n        Modal.destroyAll\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Modal from \'@components/modal\';\\nimport \'./index.less\';\\n\\nconst promiseHandler = (duration = 1000) => new Promise(resolve => {\\n  const timer = setTimeout(() => {\\n    resolve(null);\\n    clearTimeout(timer);\\n  }, duration);\\n});\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Modal\\n        title=\\"Async modal\\"\\n        visible={visible}\\n        onCancel={() => setVisible(false)}\\n        onConfirm={() => promiseHandler().then(() => setVisible(false))}\\n      >\\n        Async logic in basic usage.\\n      </Modal>\\n      <Button onClick={() => setVisible(true)}>\\n        Open modal\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          Modal.confirm({\\n            title: \'Async method\',\\n            content: \'Async logic by method.\',\\n            onConfirm: promiseHandler,\\n          });\\n        }}\\n      >\\n        Modal.confirm\\n      </Button>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"false","description":"-"},{"name":"width","type":"number","defaultValue":"420","description":"-"},{"name":"title","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"content","type":"ReactChild","defaultValue":"-","description":"-"},{"name":"showClose","type":"boolean","defaultValue":"true","description":"-"},{"name":"showCancel","type":"boolean","defaultValue":"true","description":"-"},{"name":"cancelText","type":"string","defaultValue":"Cancel","description":"-"},{"name":"confirmText","type":"string","defaultValue":"Confirm","description":"-"},{"name":"cancelLoading","type":"boolean","defaultValue":"-","description":"-"},{"name":"confirmLoading","type":"boolean","defaultValue":"-","description":"-"},{"name":"cancelButtonProps","type":"ButtonProps","defaultValue":"{}","description":"-"},{"name":"confirmButtonProps","type":"ButtonProps","defaultValue":"{}","description":"-"},{"name":"escClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"maskClosable","type":"boolean","defaultValue":"true","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"true","description":"-"},{"name":"onCancel","type":"() => void","defaultValue":"-","description":"-"},{"name":"onConfirm","type":"() => any","defaultValue":"-","description":"-"},{"name":"afterClose","type":"() => void","defaultValue":"-","description":"-"}]}},"radio":{"demos":{"demo-1":"import React from \'react\';\\nimport Radio from \'@components/radio\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Radio checked>Cola</Radio>\\n      <Radio>Fanta</Radio>\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Radio disabled={disabled} checked>Cola</Radio>\\n      <Radio disabled={disabled}>Fanta</Radio>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst { Group } = Radio;\\n\\nconst Demo = () => {\\n  const [disabled, setDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Group defaultValue=\\"Cola\\" disabled={disabled}>\\n        <Radio value=\\"Cola\\" key=\\"Cola\\">Cola</Radio>\\n        <Radio value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Radio>\\n        <Radio value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Radio>\\n        <Radio value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Radio>\\n      </Group>\\n      <Switch checked={disabled} onChange={setDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-4":"import React, { useState } from \'react\';\\nimport Radio from \'@components/radio\';\\nimport Switch from \'@components/switch\';\\n\\nconst { Group, Button } = Radio;\\n\\nconst RadioDemo = () => {\\n  const [outlineDisabled, setOutlineDisabled] = useState<boolean>(false);\\n  const [solidDisabled, setSolidDisabled] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <p>buttonStyle=\\"outline\\"</p>\\n      <Group defaultValue=\\"Cola\\" disabled={outlineDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={outlineDisabled} onChange={setOutlineDisabled} />\\n      <p>buttonStyle=\\"solid\\"</p>\\n      <Group defaultValue=\\"Cola\\" buttonStyle=\\"solid\\" disabled={solidDisabled}>\\n        <Button value=\\"Cola\\" key=\\"Cola\\">Cola</Button>\\n        <Button value=\\"Pepsi\\" key=\\"Pepsi\\" disabled>Pepsi</Button>\\n        <Button value=\\"Fanta\\" key=\\"Fanta\\">Fanta</Button>\\n        <Button value=\\"Sprite\\" key=\\"Sprite\\">Sprite</Button>\\n      </Group>\\n      <Switch checked={solidDisabled} onChange={setSolidDisabled} />\\n    </>\\n  );\\n};\\n\\nexport default RadioDemo;\\n"},"apiRows":{"default":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"onClick","type":"MouseEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"button":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"buttonStyle","type":"outline | solid","defaultValue":"outline","description":"-"},{"name":"onClick","type":"MouseEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"}],"group":[{"name":"value","type":"string","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"string","defaultValue":"-","description":"-"},{"name":"onChange","type":"ChangeEventHandler<HTMLInputElement>","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"buttonStyle","type":"outline | solid","defaultValue":"outline","description":"-"}]}},"select":{"demos":{"demo-1":"import React from \'react\';\\nimport Select from \'@components/select\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Select placeholder=\\"Please select\\">\\n      <Option value={0}>Coca-Cola</Option>\\n      <Option value={1} disabled>Pepsi</Option>\\n      <Option value={2}>Sprite</Option>\\n      <Option value={3}>Fanta Orange</Option>\\n    </Select>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Select from \'@components/select\';\\n\\nconst { Option } = Select;\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Select placeholder=\\"Please select\\" multiple>\\n      <Option value={0}>Snow Beer Trekker</Option>\\n      <Option value={1} disabled>Pepsi</Option>\\n      <Option value={2}>Corona</Option>\\n      <Option value={3}>Budweiser</Option>\\n      <Option value={4}>Hoegaarden</Option>\\n    </Select>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"open","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultOpen","type":"boolean","defaultValue":"-","description":"-"},{"name":"onOpenChange","type":"(open: boolean) => void","defaultValue":"-","description":"-"},{"name":"options","type":"OptionProps[]","defaultValue":"[]","description":"-"},{"name":"multiple","type":"boolean","defaultValue":"false","description":"-"},{"name":"placeholder","type":"string","defaultValue":"-","description":"-"},{"name":"getPopupMountNode","type":"() => HTMLElement","defaultValue":"() => document.body","description":"-"}],"option":[{"name":"label","type":"string","defaultValue":"-","description":"-"},{"name":"value","type":"ValueType","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"}],"selection":[]}},"steps":{"demos":{"demo-1":"import React from \'react\';\\nimport Steps from \'@components/steps\';\\n\\nconst steps = [\\n  {\\n    value: 1,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 2,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 3,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n  {\\n    value: 4,\\n    title: \'Title\',\\n    description: \'Description\',\\n  },\\n];\\n\\nconst Demo = () => <Steps defaultValue={3} steps={steps} />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Steps from \'@components/steps\';\\n\\nconst steps = [\\n  {\\n    value: 1,\\n    title: \'S1\',\\n    description: \'Harry Potter and the Philosopher\\\\\'s Stone.\',\\n  },\\n  {\\n    value: 2,\\n    title: \'S2\',\\n    description: \'Harry Potter and the Chamber of Secrets.\',\\n  },\\n  {\\n    value: 3,\\n    title: \'S3\',\\n    description: \'Harry Potter and the Prisoner of Azkaban.\',\\n  },\\n];\\n\\nconst Demo = () => <Steps defaultValue={3} steps={steps} vertical />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"steps","type":"Step[]","defaultValue":"-","description":"-"},{"name":"value","type":"ValueType","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"ValueType","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: ValueType) => void","defaultValue":"-","description":"-"},{"name":"vertical","type":"boolean","defaultValue":"-","description":"-"}]}},"switch":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [checked, setChecked] = useState<boolean>(false);\\n\\n  return (\\n    <>\\n      <Switch checked={checked} onChange={setChecked} />\\n      <Switch checked={checked} disabled />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      <Switch />\\n      <Switch defaultChecked />\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-3":"import React, { useState } from \'react\';\\nimport Switch from \'@components/switch\';\\n\\nconst Demo = () => {\\n  const [loading, setLoading] = useState<boolean>(false);\\n  const [loadingChecked, setLoadingChecked] = useState<boolean>(false);\\n\\n  const handleLoadingCheckChange = nextChecked => {\\n    setLoading(true);\\n\\n    let timer = setTimeout(() => {\\n      setLoading(false);\\n      setLoadingChecked(nextChecked);\\n\\n      clearTimeout(timer);\\n    }, 1000);\\n  };\\n\\n  return (\\n    <Switch\\n      loading={loading}\\n      checked={loadingChecked}\\n      onChange={handleLoadingCheckChange}\\n    />\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"checked","type":"boolean","defaultValue":"-","description":"-"},{"name":"defaultChecked","type":"boolean","defaultValue":"-","description":"-"},{"name":"onChange","type":"(checked: boolean) => void","defaultValue":"-","description":"-"},{"name":"disabled","type":"boolean","defaultValue":"-","description":"-"},{"name":"loading","type":"boolean","defaultValue":"-","description":"-"}]}},"table":{"demos":{"demo-1":"import React from \'react\';\\nimport Table, { ColumnType } from \'@components/table\';\\n\\nconst columns: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'Line\',\\n    render: value => `Line ${value}`,\\n  },\\n  {\\n    key: \'starting\',\\n    name: \'Starting\',\\n  },\\n  {\\n    key: \'terminal\',\\n    name: \'Terminal\',\\n  },\\n];\\n\\nconst data = [\\n  {\\n    id: 4,\\n    starting: \'Anheqiao North\',\\n    terminal: \'Tiangongyuan\',\\n  },\\n  {\\n    id: 10,\\n    starting: \'Suzhoujie\',\\n    terminal: \'Huoqiying\',\\n  },\\n  {\\n    id: 13,\\n    starting: \'Xizhimen\',\\n    terminal: \'Dongzhimen\',\\n  },\\n];\\n\\nconst Demo = () => <Table columns={columns} data={data} />;\\n\\nexport default Demo;\\n","demo-2":"import React from \'react\';\\nimport Table, { ColumnType } from \'@components/table\';\\n\\nconst columns: ColumnType[] = [\\n  {\\n    key: \'id\',\\n    name: \'No\',\\n    width: 100,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'name\',\\n    name: \'Name\',\\n    width: 160,\\n    fixed: \'left\',\\n  },\\n  {\\n    key: \'math\',\\n    name: \'Math\',\\n  },\\n  {\\n    key: \'program\',\\n    name: \'Program\',\\n  },\\n  {\\n    key: \'physics\',\\n    name: \'Physics\',\\n  },\\n  {\\n    key: \'psychology\',\\n    name: \'Psychology\',\\n  },\\n  {\\n    key: \'philosophy\',\\n    name: \'Philosophy\',\\n  },\\n  {\\n    key: \'natural\',\\n    name: \'Natural\',\\n  },\\n  {\\n    key: \'music\',\\n    name: \'Music\',\\n  },\\n  {\\n    key: \'total\',\\n    name: \'Total\',\\n    fixed: \'right\',\\n  },\\n];\\n\\nconst data = [\\n  {\\n    id: 1001,\\n    name: \'A\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1002,\\n    name: \'Dan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1003,\\n    name: \'Evan\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n  {\\n    id: 1004,\\n    name: \'Johnson\',\\n    math: 100,\\n    program: 100,\\n    physics: 100,\\n    psychology: 100,\\n    philosophy: 100,\\n    natural: 100,\\n    music: 100,\\n    total: 700,\\n  },\\n];\\n\\nconst Demo = () => <Table columns={columns} data={data} contentWidth={2000} />;\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"data","type":"RowType[]","defaultValue":"-","description":"-"},{"name":"rowKey","type":"string","defaultValue":"-","description":"-"},{"name":"columns","type":"ColumnType[]","defaultValue":"-","description":"-"},{"name":"contentWidth","type":"string | number","defaultValue":"-","description":"-"}]}},"tabs":{"demos":{"demo-1":"import React from \'react\';\\nimport Tabs from \'@components/tabs\';\\n\\nconst { TabPane } = Tabs;\\n\\nconst tabs = [\\n  { label: \'🚊 Line 4\', value: 4, content: \'The center of the universe is here, I heard.\' },\\n  { label: \'🚊 Line 10\', value: 10, content: \'Transfer a subway, transfer a station.\' },\\n  { label: \'🚊 Line 13\', value: 13, content: \'Happy hot pot, happy day and night.\' },\\n];\\n\\nconst Demo = () => {\\n\\n  return (\\n    <Tabs defaultValue={tabs[0].value}>\\n      {tabs.map(item => (\\n        <TabPane key={item.value} label={item.label} value={item.value}>\\n          {item.content}\\n        </TabPane>\\n      ))}\\n    </Tabs>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"value","type":"any","defaultValue":"-","description":"-"},{"name":"defaultValue","type":"any","defaultValue":"-","description":"-"},{"name":"tabs","type":"TabPaneProps[]","defaultValue":"-","description":"-"},{"name":"onChange","type":"(value: any) => void","defaultValue":"-","description":"-"},{"name":"onTabClick","type":"(value: any) => void","defaultValue":"-","description":"-"}]}},"tag":{"demos":{"demo-1":"import React from \'react\';\\nimport Tag from \'@components/tag\';\\n\\nconst tags = [\'React\', \'Vue\', \'Angular\'];\\n\\nconst Demo = () => {\\n\\n  return (\\n    <>\\n      {tags.map(tag => <Tag key={tag}>{tag}</Tag>)}\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n","demo-2":"import React, { useEffect } from \'react\';\\nimport Tag from \'@components/tag\';\\nimport Message from \'@components/message\';\\n\\nconst tags = [\'React\', \'Vue\', \'Angular\'];\\n\\nconst Demo = () => {\\n  useEffect(() => Message.destroyAll, []);\\n\\n  return (\\n    <>\\n      {tags.map(tag => (\\n        <Tag\\n          key={tag}\\n          closable\\n          onClose={() => Message.success({ content: \'Tag closed!\' })}\\n        >\\n          {tag}\\n        </Tag>\\n      ))}\\n    </>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"closable","type":"boolean","defaultValue":"-","description":"-"},{"name":"onClose","type":"(event: MouseEvent<Element, MouseEvent>) => void","defaultValue":"-","description":"-"}]}},"transition":{"demos":{"demo-1":"import React, { useState } from \'react\';\\nimport Button from \'@components/button\';\\nimport Transition from \'@components/transition\';\\nimport \'./demo-1.less\';\\n\\nconst Demo = () => {\\n  const [visible, setVisible] = useState<boolean>(true);\\n\\n  return (\\n    <div className=\\"transition-demo-1\\">\\n      <Button onClick={() => setVisible(!visible)}>\\n        Toggle\\n      </Button>\\n      <Transition\\n        visible={visible}\\n        timeout={300}\\n        beforeEnter=\\"before-enter\\"\\n        entering=\\"entering\\"\\n        entered=\\"entered\\"\\n        leaving=\\"leaving\\"\\n      >\\n        <div className=\\"box\\" />\\n      </Transition>\\n    </div>\\n  );\\n};\\n\\nexport default Demo;\\n"},"apiRows":{"default":[{"name":"visible","type":"boolean","defaultValue":"-","description":"-"},{"name":"timeout","type":"number","defaultValue":"300","description":"-"},{"name":"unmountNodeAfterLeave","type":"boolean","defaultValue":"false","description":"-"},{"name":"beforeEnter","type":"string","defaultValue":"-","description":"-"},{"name":"entering","type":"string","defaultValue":"-","description":"-"},{"name":"entered","type":"string","defaultValue":"-","description":"-"},{"name":"leaving","type":"string","defaultValue":"-","description":"-"},{"name":"onLeft","type":"() => void","defaultValue":"-","description":"-"}]}},"trigger":{"demos":{},"apiRows":{"default":[]}}},"c":[{"key":"name","name":"Property"},{"key":"type","name":"Type"},{"key":"defaultValue","name":"Default"},{"key":"description","name":"Description"}]}')}}]);